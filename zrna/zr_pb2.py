# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zr.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='zr.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x08zr.proto\"\xf1\x17\n\x06Option\x12\x16\n\x02id\x18\x01 \x01(\x0e\x32\n.Option.Id\x12\x1c\n\x05value\x18\x02 \x01(\x0e\x32\r.Option.Value\x12#\n\x0cvalid_values\x18\x03 \x03(\x0e\x32\r.Option.Value\"\xda\x07\n\x02Id\x12\x10\n\x0cTRIGGER_MODE\x10\x00\x12\x0e\n\nOPAMP_MODE\x10\x01\x12\x10\n\x0c\x43HOPPER_GAIN\x10\x02\x12\x1a\n\x16\x43OMPARATOR_INPUT_PHASE\x10\x03\x12\x15\n\x11\x43OMPARATOR_OUTPUT\x10\x04\x12\x0e\n\nCOMPARE_TO\x10\x05\x12\x1b\n\x17\x43ONTROL_SIGNAL_POLARITY\x10\x06\x12\x0f\n\x0b\x44\x45\x43\x41Y_SHAPE\x10\x07\x12\x0c\n\x08\x44\x45\x43\x41Y_TO\x10\x08\x12\x1d\n\x19\x44\x45TECTION_TO_SAMPLE_DELAY\x10\t\x12\x13\n\x0fPULSE_HIGH_WHEN\x10\n\x12\x1b\n\x17\x45XTERNAL_SIGNAL_ALLOWED\x10\x0b\x12\x10\n\x0c\x46ILTER_ORDER\x10\x0c\x12\x13\n\x0f\x46ILTER_TOPOLOGY\x10\r\x12\x0f\n\x0b\x46ILTER_TYPE\x10\x0e\x12\x0e\n\nGAIN_STAGE\x10\x0f\x12\x0e\n\nHYSTERESIS\x10\x10\x12\x10\n\x0cIO_CELL_MODE\x10\x11\x12\x10\n\x0cIO_CELL_TYPE\x10\x12\x12\x0f\n\x0bINPUT_PHASE\x10\x13\x12\x12\n\x0eINPUT_POLARITY\x10\x14\x12\x13\n\x0fINPUT1_POLARITY\x10\x15\x12\x13\n\x0fINPUT2_POLARITY\x10\x16\x12\x13\n\x0fINPUT3_POLARITY\x10\x17\x12\x13\n\x0fINPUT4_POLARITY\x10\x18\x12\x0e\n\nINPUT_TYPE\x10\x19\x12\x10\n\x0cINPUT_WIRING\x10\x1a\x12\x1d\n\x19LOWER_DIGITAL_OUTPUT_MODE\x10\x1b\x12!\n\x1dLOWER_DIGITAL_OUTPUT_POLARITY\x10\x1c\x12\x0f\n\x0bOUTPUT_MODE\x10\x1d\x12\x10\n\x0cOUTPUT_PHASE\x10\x1e\x12\x13\n\x0fOUTPUT_POLARITY\x10\x1f\x12\x0f\n\x0bOUTPUT_SYNC\x10 \x12\x0f\n\x0bOUTPUT_TYPE\x10!\x12\x19\n\x15PEAK_AMPLITUDE_TARGET\x10\"\x12\x12\n\x0ePEAK_TO_DETECT\x10#\x12\x14\n\x10PHYSICAL_ADDRESS\x10$\x12\x0c\n\x08POLARITY\x10%\x12\x18\n\x14RAM_TRANSFER_TRIGGER\x10&\x12\x12\n\x0eRECTIFIER_MODE\x10\'\x12\x16\n\x12SAWTOOTH_DIRECTION\x10(\x12\x13\n\x0fSYNC_CLOCK_EDGE\x10)\x12\x1d\n\x19UPPER_DIGITAL_OUTPUT_MODE\x10*\x12!\n\x1dUPPER_DIGITAL_OUTPUT_POLARITY\x10+\x12\x15\n\x11HOLD_CONTROL_MODE\x10,\x12\x16\n\x12\x44\x45PENDENT_VARIABLE\x10-\"\xae\x0f\n\x05Value\x12\x12\n\x0e\x44IGITAL_OUTPUT\x10\x00\x12\x1c\n\x18REFERENCE_VOLTAGE_OUTPUT\x10\x01\x12\n\n\x06LINEAR\x10\x02\x12\x0f\n\x0b\x45XPONENTIAL\x10\x03\x12\x11\n\rSIGNAL_GROUND\x10\x04\x12\x1b\n\x17REFERENCE_VOLTAGE_LEVEL\x10\x05\x12\r\n\tONE_PHASE\x10\x06\x12\x0c\n\x08NO_DELAY\x10\x07\x12\x13\n\x0fTRIANGLE_RISING\x10\x08\x12\x14\n\x10TRIANGLE_FALLING\x10\t\x12\x0b\n\x07LOWPASS\x10\n\x12\x0c\n\x08HIGHPASS\x10\x0b\x12\x0c\n\x08\x42\x41NDPASS\x10\x0c\x12\x0b\n\x07\x41LLPASS\x10\r\x12\n\n\x06TYPE_I\x10\x0e\x12\x0b\n\x07TYPE_II\x10\x0f\x12\r\n\tUNDEFINED\x10\x10\x12\t\n\x05\x46IRST\x10\x11\x12\n\n\x06SECOND\x10\x12\x12\n\n\x06SINGLE\x10\x13\x12\x0c\n\x08\x43\x41SCADED\x10\x14\x12\x13\n\x0fZERO_MILLIVOLTS\x10\x15\x12\x12\n\x0eTEN_MILLIVOLTS\x10\x16\x12\x12\n\x0eINPUT_DISABLED\x10\x17\x12\r\n\tINVERTING\x10\x18\x12\x10\n\x0cNONINVERTING\x10\x19\x12\x0f\n\x0b\x41\x43TIVE_HIGH\x10\x1a\x12\x0e\n\nACTIVE_LOW\x10\x1b\x12\x0f\n\x0bNONINVERTED\x10\x1c\x12\x0c\n\x08INVERTED\x10\x1d\x12\x11\n\rSYNC_DISABLED\x10\x1e\x12\x12\n\x0eSYNC_TO_PHASE1\x10\x1f\x12\x12\n\x0eSYNC_TO_PHASE2\x10 \x12\x11\n\rPOSITIVE_PEAK\x10!\x12\x11\n\rNEGATIVE_PEAK\x10\"\x12\x0c\n\x08POSITIVE\x10#\x12\x0c\n\x08NEGATIVE\x10$\x12\r\n\tFULL_WAVE\x10%\x12\x16\n\x12POSITIVE_HALF_WAVE\x10&\x12\x16\n\x12NEGATIVE_HALF_WAVE\x10\'\x12\n\n\x06RISING\x10(\x12\x0b\n\x07\x46\x41LLING\x10)\x12\n\n\x06PHASE1\x10*\x12\n\n\x06PHASE2\x10+\x12\x0f\n\x0bRISING_EDGE\x10,\x12\x10\n\x0c\x46\x41LLING_EDGE\x10-\x12\x11\n\rTRIANGLE_WAVE\x10.\x12\x0f\n\x0bSQUARE_WAVE\x10/\x12\x05\n\x01I\x10\x30\x12\x06\n\x02IA\x10\x31\x12\x06\n\x02II\x10\x32\x12\x0b\n\x07\x44IGITAL\x10\x33\x12\x15\n\x11RAM_TRANSFER_CELL\x10\x34\x12\x14\n\x10IO_CELL_DISABLED\x10\x35\x12\t\n\x05INPUT\x10\x36\x12\n\n\x06OUTPUT\x10\x37\x12\x19\n\x15INDEPENDENT_AMPLIFIER\x10\x38\x12\x16\n\x12LOW_OFFSET_CHOPPER\x10\x39\x12\x10\n\x0cINPUT_BYPASS\x10:\x12\x19\n\x15INPUT_SAMPLE_AND_HOLD\x10;\x12\r\n\tAMPLIFIER\x10<\x12\x12\n\x0e\x43ONTROL_SIGNAL\x10=\x12\x11\n\rOUTPUT_BYPASS\x10>\x12\x1a\n\x16OUTPUT_SAMPLE_AND_HOLD\x10?\x12\x07\n\x03VMR\x10@\x12\x18\n\x14SINGLE_ENDED_DIGITAL\x10\x41\x12\x10\n\x0c\x44IFFERENTIAL\x10\x42\x12\x19\n\x15INVERTED_DIFFERENTIAL\x10\x43\x12\x19\n\x15SINGLE_ENDED_POSITIVE\x10\x44\x12\x19\n\x15SINGLE_ENDED_NEGATIVE\x10\x45\x12\x0b\n\x07ZERO_DB\x10\x46\x12\n\n\x06TEN_DB\x10G\x12\r\n\tTWENTY_DB\x10H\x12\r\n\tTHIRTY_DB\x10I\x12\x0c\n\x08\x46ORTY_DB\x10J\x12\x0c\n\x08\x46IFTY_DB\x10K\x12\x0c\n\x08SIXTY_DB\x10L\x12\x1b\n\x17\x44IGITAL_OUTPUT_DISABLED\x10M\x12\x0b\n\x07\x43LOCK_A\x10N\x12\x0b\n\x07\x43LOCK_B\x10O\x12\x14\n\x10\x43OMPARATOR_INPUT\x10P\x12\x16\n\x12RAM_TRANSFER_PULSE\x10Q\x12\x1b\n\x17\x41UTONULL_OSC_START_DONE\x10R\x12\r\n\tAUTOMATIC\x10S\x12\x10\n\x0c\x45VENT_DRIVEN\x10T\x12\x0e\n\nCLOCK_SYNC\x10U\x12\x0b\n\x07TRIGGER\x10V\x12\x07\n\x03\x41RM\x10W\x12\x0b\n\x07\x45NABLED\x10X\x12\x0c\n\x08\x44ISABLED\x10Y\x12\x0c\n\x08IO_CELL0\x10Z\x12\x0c\n\x08IO_CELL1\x10[\x12\x0c\n\x08IO_CELL2\x10\\\x12\x0c\n\x08IO_CELL3\x10]\x12\x0c\n\x08IO_CELL4\x10^\x12\x0c\n\x08IO_CELL5\x10_\x12\x0c\n\x08IO_CELL6\x10`\x12\x13\n\x0fIO_CELL_DIGITAL\x10\x61\x12\x18\n\x14IO_RAM_TRANSFER_CELL\x10\x62\x12\n\n\x06GROUND\x10\x63\x12\x10\n\x0cSECOND_INPUT\x10\x64\x12\x16\n\x12VARIABLE_REFERENCE\x10\x65\x12\x0f\n\x0bSAMPLE_HOLD\x10\x66\x12\r\n\tPAUSE_RUN\x10g\x12\x0b\n\x07\x44\x43_GAIN\x10h\x12\x17\n\x13HIGH_FREQUENCY_GAIN\x10i\x12\x12\n\x0ePOLE_FREQUENCY\x10j\x12\x12\n\x0eZERO_FREQUENCY\x10k\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10l\x12\x16\n\x12\x43HOPPER_STABILIZED\x10m\x12\r\n\tIMMEDIATE\x10n\x12\x08\n\x04HOLD\x10o\x12\x08\n\x04HALF\x10p\x12\x0e\n\nCONTINUOUS\x10q\x12\x0b\n\x07INVALID\x10r\"\x86\t\n\tParameter\x12\x19\n\x02id\x18\x01 \x01(\x0e\x32\r.Parameter.Id\x12\x1d\n\x04type\x18\x02 \x01(\x0e\x32\x0f.Parameter.Type\x12\x11\n\trequested\x18\x03 \x01(\x02\x12\x10\n\x08realized\x18\x04 \x01(\x02\x12\x0f\n\x07minimum\x18\x05 \x01(\x02\x12\x0f\n\x07maximum\x18\x06 \x01(\x02\x12!\n\x19interpolation_in_progress\x18\x07 \x01(\x08\x12\x1f\n\x17interpolation_increment\x18\x08 \x01(\x02\x12\"\n\x1a\x63urrent_interpolation_step\x18\t \x01(\r\x12 \n\x18interpolation_step_count\x18\n \x01(\r\"\xd3\x05\n\x02Id\x12\x14\n\x10\x43\x45NTER_FREQUENCY\x10\x00\x12\x14\n\x10\x43ORNER_FREQUENCY\x10\x01\x12\x17\n\x13\x43OUNTER_RESET_VALUE\x10\x02\x12\x0b\n\x07\x44\x43_GAIN\x10\x03\x12\t\n\x05\x44\x45\x43\x41Y\x10\x04\x12\x17\n\x13\x44\x45\x43\x41Y_TIME_CONSTANT\x10\x05\x12\x16\n\x12\x44\x45LAY_MICROSECONDS\x10\x06\x12\x1c\n\x18\x44IFFERENTIATION_CONSTANT\x10\x07\x12\x0b\n\x07\x44IVISOR\x10\x08\x12\x0e\n\nDUTY_CYCLE\x10\t\x12\x08\n\x04GAIN\x10\n\x12\x0f\n\x0bGAIN_INPUT1\x10\x0b\x12\x0f\n\x0bGAIN_INPUT2\x10\x0c\x12\x0f\n\x0bGAIN_INPUT3\x10\r\x12\x0f\n\x0bGAIN_INPUT4\x10\x0e\x12\x17\n\x13HIGH_FREQUENCY_GAIN\x10\x0f\x12\x10\n\x0cSCALE_FACTOR\x10\x10\x12\x17\n\x13SCALE_FACTOR_INPUT1\x10\x11\x12\x17\n\x13SCALE_FACTOR_INPUT2\x10\x12\x12\x17\n\x13SCALE_FACTOR_INPUT3\x10\x13\x12\x19\n\x15MULTIPLICATION_FACTOR\x10\x14\x12\x19\n\x15OSCILLATION_FREQUENCY\x10\x15\x12\x18\n\x14OUTPUT_VOLTAGE_LIMIT\x10\x16\x12\x12\n\x0ePEAK_AMPLITUDE\x10\x17\x12\r\n\tPEAK_RATE\x10\x18\x12\x12\n\x0ePOLE_FREQUENCY\x10\x19\x12\x17\n\x13POLE_QUALITY_FACTOR\x10\x1a\x12\x12\n\x0eQUALITY_FACTOR\x10\x1b\x12\x14\n\x10RANGE_PERCENTAGE\x10\x1c\x12\x15\n\x11REFERENCE_VOLTAGE\x10\x1d\x12\x18\n\x14WAVE_MAXIMUM_VOLTAGE\x10\x1e\x12\x18\n\x14WAVE_MINIMUM_VOLTAGE\x10\x1f\x12\x12\n\x0eZERO_FREQUENCY\x10 \x12\x17\n\x13ZERO_QUALITY_FACTOR\x10!\"\x97\x01\n\x04Type\x12\x08\n\x04\x42YTE\x10\x00\x12\x0c\n\x08\x43ONSTANT\x10\x01\x12\x11\n\rFREQUENCY_KHZ\x10\x02\x12\r\n\tGAIN_TYPE\x10\x03\x12\x0e\n\nPERCENTAGE\x10\x04\x12\x17\n\x13QUALITY_FACTOR_TYPE\x10\x05\x12\x08\n\x04RATE\x10\x06\x12\x08\n\x04TIME\x10\x07\x12\x0b\n\x07VOLTAGE\x10\x08\x12\x0b\n\x07INVALID\x10\t\"Y\n\x0eParameterSweep\x12\x14\n\x0ctarget_value\x18\x01 \x01(\x02\x12\x1d\n\x15\x64uration_microseconds\x18\x02 \x01(\r\x12\x12\n\nstep_count\x18\x03 \x01(\r\"P\n\x18ModuleClockConfiguration\x12\x19\n\x07\x63lock_a\x18\x01 \x01(\x0e\x32\x08.ClockId\x12\x19\n\x07\x63lock_b\x18\x02 \x01(\x0e\x32\x08.ClockId\"\xca\x02\n\x1bProcessorClockConfiguration\x12\x45\n\tsys_clock\x18\x01 \x03(\x0b\x32\x32.ProcessorClockConfiguration.SysClockConfiguration\x12\x1e\n\x16master_clock_frequency\x18\x02 \x01(\r\x12\x1b\n\x13wait_for_clock_sync\x18\x03 \x01(\x08\x1a\x7f\n\x15SysClockConfiguration\x12\x14\n\x02id\x18\x01 \x01(\x0e\x32\x08.ClockId\x12\x0f\n\x07\x64ivisor\x18\x02 \x01(\r\x12?\n\x08timebase\x18\x03 \x01(\x0e\x32-.ProcessorClockConfiguration.SysClockTimebase\"&\n\x10SysClockTimebase\x12\x08\n\x04SYS1\x10\x00\x12\x08\n\x04SYS2\x10\x01\"[\n\x0bLookupTable\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\x02\x12\x1e\n\x16minimum_possible_value\x18\x02 \x01(\x02\x12\x1e\n\x16maximum_possible_value\x18\x03 \x01(\x02\"\xf2\x11\n\x0c\x41nalogModule\x12\n\n\x02id\x18\x01 \x01(\r\x12 \n\x04type\x18\x02 \x01(\x0e\x32\x12.AnalogModule.Type\x12\x1e\n\nparameters\x18\x03 \x03(\x0b\x32\n.Parameter\x12\x18\n\x07options\x18\x04 \x03(\x0b\x32\x07.Option\x12\x36\n\x13\x63lock_configuration\x18\x05 \x01(\x0b\x32\x19.ModuleClockConfiguration\x12\x18\n\x10has_lookup_table\x18\x06 \x01(\x08\x1a\xc0\x01\n\x05Input\x12\x14\n\x02id\x18\x01 \x01(\x0e\x32\x08.InputId\x12\x1d\n\x15\x63onditionally_enabled\x18\x02 \x01(\x08\x12\x31\n\nenabled_if\x18\x03 \x01(\x0b\x32\x1d.AnalogModule.Input.EnabledIf\x1aO\n\tEnabledIf\x12\x1d\n\toption_id\x18\x01 \x01(\x0e\x32\n.Option.Id\x12#\n\x0coption_value\x18\x02 \x01(\x0e\x32\r.Option.Value\"\xe4\x0e\n\x04Type\x12\x0e\n\nCOMPARATOR\x10\x00\x12\x0e\n\nDELAY_LINE\x10\x01\x12\x12\n\x0e\x44IFFERENTIATOR\x10\x02\x12\x0b\n\x07\x44IVIDER\x10\x03\x12\x10\n\x0c\x44IVIDER_HOLD\x10\x04\x12\x12\n\x0e\x46ILTER_LOWPASS\x10\x05\x12\x15\n\x11\x46ILTER_LOWPASS_LF\x10\x06\x12\x13\n\x0f\x46ILTER_HIGHPASS\x10\x07\x12\x16\n\x12\x46ILTER_HIGHPASS_LF\x10\x08\x12\x12\n\x0e\x46ILTER_ALLPASS\x10\t\x12\x15\n\x11\x46ILTER_ALLPASS_LF\x10\n\x12\x14\n\x10\x46ILTER_POLE_ZERO\x10\x0b\x12\x17\n\x13\x46ILTER_POLE_ZERO_LF\x10\x0c\x12\x19\n\x15\x46ILTER_BIQUAD_LOWPASS\x10\r\x12\x1c\n\x18\x46ILTER_BIQUAD_LOWPASS_LF\x10\x0e\x12\x1a\n\x16\x46ILTER_BIQUAD_HIGHPASS\x10\x0f\x12\x1d\n\x19\x46ILTER_BIQUAD_HIGHPASS_LF\x10\x10\x12\x1a\n\x16\x46ILTER_BIQUAD_BANDPASS\x10\x11\x12\x1d\n\x19\x46ILTER_BIQUAD_BANDPASS_LF\x10\x12\x12\x1a\n\x16\x46ILTER_BIQUAD_BANDSTOP\x10\x13\x12\x1d\n\x19\x46ILTER_BIQUAD_BANDSTOP_LF\x10\x14\x12\x1b\n\x17\x46ILTER_BIQUAD_POLE_ZERO\x10\x15\x12\x1d\n\x19\x46ILTER_VOLTAGE_CONTROLLED\x10\x16\x12\r\n\tGAIN_HALF\x10\x17\x12\r\n\tGAIN_HOLD\x10\x18\x12\x0c\n\x08GAIN_INV\x10\x19\x12\x10\n\x0cGAIN_LIMITER\x10\x1a\x12\x11\n\rGAIN_POLARITY\x10\x1b\x12\x19\n\x15GAIN_POLARITY_LOWPASS\x10\x1c\x12\x0f\n\x0bGAIN_SWITCH\x10\x1d\x12\x17\n\x13GAIN_SWITCH_LOWPASS\x10\x1e\x12\x1b\n\x17GAIN_VOLTAGE_CONTROLLED\x10\x1f\x12$\n GAIN_VOLTAGE_CONTROLLED_CASCADED\x10 \x12\x08\n\x04HOLD\x10!\x12\x1b\n\x17HOLD_VOLTAGE_CONTROLLED\x10\"\x12\x0e\n\nINTEGRATOR\x10#\x12\x13\n\x0fINTEGRATOR_HOLD\x10$\x12\x14\n\x10INTEGRATOR_RESET\x10%\x12\x0e\n\nMULTIPLIER\x10&\x12\x13\n\x0fMULTIPLIER_HOLD\x10\'\x12\x12\n\x0eOSCILLATOR_SAW\x10(\x12\x16\n\x12OSCILLATOR_SAW_SQR\x10)\x12\x13\n\x0fOSCILLATOR_SINE\x10*\x12\x16\n\x12OSCILLATOR_SINE_LF\x10+\x12\x16\n\x12OSCILLATOR_TRI_SQR\x10,\x12!\n\x1dOSCILLATOR_VOLTAGE_CONTROLLED\x10-\x12\x11\n\rPEAK_DETECTOR\x10.\x12\x17\n\x13PEAK_DETECTOR_RESET\x10/\x12\x15\n\x11PEAK_DETECTOR_TAU\x10\x30\x12\x1a\n\x16PEAK_DETECTOR_TAU_SYNC\x10\x31\x12\x14\n\x10RECTIFIER_FILTER\x10\x32\x12\r\n\tRECTIFIER\x10\x33\x12\x12\n\x0eRECTIFIER_HOLD\x10\x34\x12\x0f\n\x0bSQUARE_ROOT\x10\x35\x12\x0b\n\x07SUM_TWO\x10\x36\x12\r\n\tSUM_THREE\x10\x37\x12\x0c\n\x08SUM_FOUR\x10\x38\x12\x12\n\x0eSUM_INVERT_TWO\x10\x39\x12\x14\n\x10SUM_INVERT_THREE\x10:\x12\x12\n\x0eSUM_FILTER_TWO\x10;\x12\x14\n\x10SUM_FILTER_THREE\x10<\x12\x15\n\x11SUM_INTEGRATE_TWO\x10=\x12\x1b\n\x17SUM_INTEGRATE_TWO_RESET\x10>\x12\x17\n\x13SUM_INTEGRATE_THREE\x10?\x12\x1d\n\x19SUM_INTEGRATE_THREE_RESET\x10@\x12\x0e\n\nSUM_BIQUAD\x10\x41\x12\x15\n\x11TRANSFER_FUNCTION\x10\x42\x12\x14\n\x10VOLTAGE_CONSTANT\x10\x43\x12\x1a\n\x16ZERO_CROSSING_DETECTOR\x10\x44\x12\x16\n\x12\x41RBITRARY_WAVE_GEN\x10\x45\x12\x1c\n\x18\x41RBITRARY_WAVE_GEN_RESET\x10\x46\x12\x1b\n\x17\x44UAL_ARBITRARY_WAVE_GEN\x10G\x12!\n\x1d\x44UAL_ARBITRARY_WAVE_GEN_RESET\x10H\x12\x0c\n\x08\x41UDIO_IN\x10I\x12\r\n\tAUDIO_OUT\x10J\x12\x11\n\rULTRASONIC_IN\x10K\x12\x12\n\x0eULTRASONIC_OUT\x10L\x12\x0f\n\x0bOUTPUT_CELL\x10M\x12\x0e\n\nINPUT_CELL\x10N\x12\x17\n\x13\x44IGITAL_OUTPUT_CELL\x10O\x12\x1f\n\x1b\x41NALOG_TO_DIGITAL_CONVERTER\x10P\x12\x19\n\x15\x44\x45LTA_SIGMA_MODULATOR\x10Q\x12!\n\x1d\x44\x45LTA_SIGMA_MODULATOR_EXT_REF\x10R\"@\n\rOutputAddress\x12\x11\n\tmodule_id\x18\x01 \x01(\r\x12\x1c\n\toutput_id\x18\x02 \x01(\x0e\x32\t.OutputId\"=\n\x0cInputAddress\x12\x11\n\tmodule_id\x18\x01 \x01(\r\x12\x1a\n\x08input_id\x18\x02 \x01(\x0e\x32\x08.InputId\"S\n\x03Net\x12&\n\x0eoutput_address\x18\x01 \x01(\x0b\x32\x0e.OutputAddress\x12$\n\rinput_address\x18\x02 \x01(\x0b\x32\r.InputAddress\"\'\n\x17\x43onfigurationByteStream\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\"\xfd\t\n\x0cMidiListener\x12\n\n\x02id\x18\x01 \x01(\r\x12\x0f\n\x07\x63hannel\x18\x02 \x01(\r\x12\x11\n\tmodule_id\x18\x03 \x01(\r\x12%\n\x0cparameter_id\x18\x04 \x01(\x0e\x32\r.Parameter.IdH\x00\x12\x1f\n\toption_id\x18\x05 \x01(\x0e\x32\n.Option.IdH\x00\x12\"\n\x04note\x18\x07 \x01(\x0b\x32\x12.MidiListener.NoteH\x01\x12(\n\x07trigger\x18\x08 \x01(\x0b\x32\x15.MidiListener.TriggerH\x01\x12\"\n\x04gate\x18\t \x01(\x0b\x32\x12.MidiListener.GateH\x01\x12\x1e\n\x02\x63\x63\x18\n \x01(\x0b\x32\x10.MidiListener.CCH\x01\x1a\xfa\x01\n\x04Note\x12\x18\n\x10\x63ustom_value_map\x18\x01 \x01(\x08\x12;\n\rparameter_map\x18\x02 \x01(\x0b\x32\".MidiListener.Note.NoteToParameterH\x00\x12\x35\n\noption_map\x18\x03 \x01(\x0b\x32\x1f.MidiListener.Note.NoteToOptionH\x00\x1a!\n\x0fNoteToParameter\x12\x0e\n\x06values\x18\x01 \x03(\x02\x1a-\n\x0cNoteToOption\x12\x1d\n\x06values\x18\x01 \x03(\x0e\x32\r.Option.ValueB\x12\n\x10on_note_received\x1a[\n\x07Trigger\x12\x19\n\x0fparameter_value\x18\x01 \x01(\x02H\x00\x12%\n\x0coption_value\x18\x02 \x01(\x0e\x32\r.Option.ValueH\x00\x42\x0e\n\x0con_triggered\x1a\xc6\x01\n\x04Gate\x12\x1e\n\x14parameter_value_open\x18\x01 \x01(\x02H\x00\x12*\n\x11option_value_open\x18\x02 \x01(\x0e\x32\r.Option.ValueH\x00\x12 \n\x16parameter_value_closed\x18\x03 \x01(\x02H\x01\x12,\n\x13option_value_closed\x18\x04 \x01(\x0e\x32\r.Option.ValueH\x01\x42\x10\n\x0eon_gate_openedB\x10\n\x0eon_gate_closed\x1a\xad\x03\n\x02\x43\x43\x12\x0e\n\x06number\x18\x01 \x01(\r\x12\x11\n\tmatch_any\x18\x02 \x01(\x08\x12\x45\n\x15parameter_value_range\x18\x03 \x01(\x0b\x32$.MidiListener.CC.ParameterValueRangeH\x00\x12?\n\x12option_value_range\x18\x04 \x01(\x0b\x32!.MidiListener.CC.OptionValueRangeH\x00\x1aO\n\x13ParameterValueRange\x12\x0b\n\x03min\x18\x01 \x01(\x02\x12\x0b\n\x03max\x18\x02 \x01(\x02\x12\x0e\n\x06\x63\x63_min\x18\x03 \x01(\r\x12\x0e\n\x06\x63\x63_max\x18\x04 \x01(\r\x1a\x99\x01\n\x10OptionValueRange\x12\x35\n\x05items\x18\x04 \x03(\x0b\x32&.MidiListener.CC.OptionValueRange.Item\x1aN\n\x04Item\x12\x1c\n\x05value\x18\x01 \x01(\x0e\x32\r.Option.Value\x12\x0e\n\x06\x63\x63_min\x18\x02 \x01(\r\x12\x18\n\x10\x63\x63_max_exclusive\x18\x03 \x01(\rB\x0f\n\ron_cc_changedB\x08\n\x06targetB\x06\n\x04type\"\xd9\x01\n\x07\x43ircuit\x12\n\n\x02id\x18\x01 \x01(\r\x12\x1e\n\x07modules\x18\x02 \x03(\x0b\x32\r.AnalogModule\x12\x12\n\x04nets\x18\x03 \x03(\x0b\x32\x04.Net\x12%\n\x0emidi_listeners\x18\x04 \x03(\x0b\x32\r.MidiListener\x12\"\n\x0clookup_table\x18\x05 \x01(\x0b\x32\x0c.LookupTable\x12\x43\n\x1dprocessor_clock_configuration\x18\x06 \x01(\x0b\x32\x1c.ProcessorClockConfiguration\"\x8c\x01\n\x0cSystemOption\x12\x1c\n\x02id\x18\x01 \x01(\x0e\x32\x10.SystemOption.Id\x12\x0f\n\x07\x65nabled\x18\x02 \x01(\x08\"M\n\x02Id\x12\r\n\tTEST_MODE\x10\x00\x12\x1b\n\x17REALIZED_VALUE_RESPONSE\x10\x01\x12\x1b\n\x17HALF_SPEED_MASTER_CLOCK\x10\x02\"\xab\x07\n\rPathComponent\x12\x30\n\x0bresource_id\x18\x01 \x01(\x0e\x32\x19.PathComponent.ResourceIdH\x00\x12)\n\x0bmodule_type\x18\x02 \x01(\x0e\x32\x12.AnalogModule.TypeH\x00\x12%\n\x0cparameter_id\x18\x03 \x01(\x0e\x32\r.Parameter.IdH\x00\x12\x1f\n\toption_id\x18\x04 \x01(\x0e\x32\n.Option.IdH\x00\x12,\n\x10system_option_id\x18\x05 \x01(\x0e\x32\x10.SystemOption.IdH\x00\x12\x1c\n\x08input_id\x18\x06 \x01(\x0e\x32\x08.InputIdH\x00\x12\x1e\n\toutput_id\x18\x07 \x01(\x0e\x32\t.OutputIdH\x00\x12\x1a\n\x10integer_argument\x18\x08 \x01(\rH\x00\x12\x19\n\x0fstring_argument\x18\t \x01(\tH\x00\"\xc9\x04\n\nResourceId\x12\x0b\n\x07\x43IRCUIT\x10\x00\x12\x0e\n\nBYTESTREAM\x10\x01\x12\x15\n\x11UPDATE_BYTESTREAM\x10\x02\x12\n\n\x06MODULE\x10\x03\x12\x0b\n\x07MODULES\x10\x04\x12\x08\n\x04NETS\x10\x05\x12\x0b\n\x07STORAGE\x10\x06\x12\r\n\tPARAMETER\x10\x07\x12\x0e\n\nPARAMETERS\x10\x08\x12\n\n\x06OPTION\x10\t\x12\x0b\n\x07OPTIONS\x10\n\x12\n\n\x06SYSTEM\x10\x0b\x12\x08\n\x04TYPE\x10\x0c\x12\n\n\x06INPUTS\x10\r\x12\x0b\n\x07OUTPUTS\x10\x0e\x12\t\n\x05\x44\x45\x42UG\x10\x0f\x12\x0c\n\x08\x43IRCUITS\x10\x10\x12\x08\n\x04LOAD\x10\x11\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x12\x12\t\n\x05\x43OUNT\x10\x13\x12\x07\n\x03NET\x10\x15\x12\r\n\tREQUESTED\x10\x16\x12\x0c\n\x08REALIZED\x10\x17\x12\x0b\n\x07MINIMUM\x10\x18\x12\x0b\n\x07MAXIMUM\x10\x19\x12\t\n\x05VALUE\x10\x1a\x12\t\n\x05STATE\x10\x1b\x12\x0c\n\x08RESOURCE\x10\x1c\x12\x08\n\x04HEAP\x10\x1d\x12\n\n\x06\x41NALOG\x10\x1e\x12\x08\n\x04\x46ITS\x10\x1f\x12\t\n\x05\x43LOCK\x10 \x12\x14\n\x10HAS_LOOKUP_TABLE\x10!\x12\x10\n\x0cLOOKUP_TABLE\x10\"\x12\x08\n\x04MIDI\x10#\x12\r\n\tLISTENERS\x10$\x12\x0c\n\x08LISTENER\x10%\x12\t\n\x05SWEEP\x10&\x12\x08\n\x04PING\x10\'\x12\x0b\n\x07VERSION\x10(\x12\r\n\tENDPOINTS\x10)\x12\x0b\n\x07STARTUP\x10*\x12\x0e\n\nDISCONNECT\x10+\x12\t\n\x05PHASE\x10,B\x06\n\x04type\".\n\x03URL\x12\'\n\x0fpath_components\x18\x01 \x03(\x0b\x32\x0e.PathComponent\"\xba\x01\n\x13StorageDebugRequest\x12-\n\x07\x63ommand\x18\x01 \x01(\x0e\x32\x1c.StorageDebugRequest.Command\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\x10\n\x08new_path\x18\x03 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x04 \x01(\x0c\"F\n\x07\x43ommand\x12\x07\n\x03\x43\x41T\x10\x00\x12\x06\n\x02LS\x10\x01\x12\x07\n\x03PUT\x10\x02\x12\n\n\x06REMOVE\x10\x03\x12\n\n\x06RENAME\x10\x04\x12\t\n\x05MKDIR\x10\x05\"\xfd\x04\n\x07Request\x12\x17\n\x06method\x18\x01 \x01(\x0e\x32\x07.Method\x12\x11\n\x03url\x18\x02 \x01(\x0b\x32\x04.URL\x12\x1b\n\x07\x63ircuit\x18\x03 \x01(\x0b\x32\x08.CircuitH\x00\x12\x1f\n\x06module\x18\x04 \x01(\x0b\x32\r.AnalogModuleH\x00\x12\x13\n\x03net\x18\x05 \x01(\x0b\x32\x04.NetH\x00\x12&\n\rmidi_listener\x18\x06 \x01(\x0b\x32\r.MidiListenerH\x00\x12$\n\x0csystem_state\x18\x07 \x01(\x0e\x32\x0c.SystemStateH\x00\x12\x35\n\x15storage_debug_request\x18\x08 \x01(\x0b\x32\x14.StorageDebugRequestH\x00\x12\x13\n\trequested\x18\t \x01(\x02H\x00\x12%\n\x0coption_value\x18\n \x01(\x0e\x32\r.Option.ValueH\x00\x12\x1f\n\x15system_option_enabled\x18\x0b \x01(\x08H\x00\x12.\n\nbytestream\x18\x0c \x01(\x0b\x32\x18.ConfigurationByteStreamH\x00\x12?\n\x1amodule_clock_configuration\x18\r \x01(\x0b\x32\x19.ModuleClockConfigurationH\x00\x12\x45\n\x1dprocessor_clock_configuration\x18\x0e \x01(\x0b\x32\x1c.ProcessorClockConfigurationH\x00\x12*\n\x0fparameter_sweep\x18\x0f \x01(\x0b\x32\x0f.ParameterSweepH\x00\x12\"\n\x0clookup_table\x18\x10 \x01(\x0b\x32\x0c.LookupTableB\t\n\x07payload\",\n\x06Inputs\x12\"\n\x05input\x18\x01 \x03(\x0b\x32\x13.AnalogModule.Input\"$\n\x07Outputs\x12\x19\n\x06output\x18\x01 \x03(\x0e\x32\t.OutputId\".\n\rAnalogModules\x12\x1d\n\x06module\x18\x01 \x03(\x0b\x32\r.AnalogModule\"\x19\n\x04Nets\x12\x11\n\x03net\x18\x01 \x03(\x0b\x32\x04.Net\"+\n\nParameters\x12\x1d\n\tparameter\x18\x01 \x03(\x0b\x32\n.Parameter\"5\n\rSystemOptions\x12$\n\rsystem_option\x18\x01 \x03(\x0b\x32\r.SystemOption\"\"\n\x07Options\x12\x17\n\x06option\x18\x01 \x03(\x0b\x32\x07.Option\"6\n\x0bModuleTypes\x12\'\n\x0bmodule_type\x18\x01 \x03(\x0e\x32\x12.AnalogModule.Type\"5\n\rMidiListeners\x12$\n\rmidi_listener\x18\x01 \x03(\x0b\x32\r.MidiListener\"L\n\x08HeapInfo\x12\x12\n\nbytes_free\x18\x01 \x01(\r\x12\x13\n\x0b\x62ytes_total\x18\x02 \x01(\r\x12\x17\n\x0fused_percentage\x18\x03 \x01(\x02\"\xf2\x01\n\nAnalogInfo\x12\x12\n\ncapacitors\x18\x01 \x01(\r\x12\x0e\n\x06opamps\x18\x02 \x01(\r\x12\x0f\n\x07iocells\x18\x03 \x01(\r\x12\x13\n\x0b\x63omparators\x18\x04 \x01(\r\x12\x0c\n\x04sars\x18\x05 \x01(\r\x12\x14\n\x0clookup_table\x18\x06 \x01(\x08\x12\x0f\n\x07\x63ounter\x18\x07 \x01(\x08\x12&\n\x1eresource_block_used_percentage\x18\x08 \x01(\x02\x12\x1f\n\x17io_cell_used_percentage\x18\t \x01(\x02\x12\x1c\n\x14spans_block_boundary\x18\n \x01(\x08\"\xd3\x05\n\x15\x41nalogSignalProcessor\x12<\n\x0eresource_block\x18\x01 \x03(\x0b\x32$.AnalogSignalProcessor.ResourceBlock\x12\x38\n\x07io_cell\x18\x02 \x03(\x0b\x32\'.AnalogSignalProcessor.IOCellAllocation\x12>\n\x0clookup_table\x18\x03 \x01(\x0b\x32(.AnalogSignalProcessor.ResourceOwnership\x12\x39\n\x07\x63ounter\x18\x04 \x01(\x0b\x32(.AnalogSignalProcessor.ResourceOwnership\x1a\x34\n\x11ResourceOwnership\x12\x0c\n\x04\x66ree\x18\x01 \x01(\x08\x12\x11\n\tmodule_id\x18\x02 \x01(\r\x1a\xfa\x01\n\rResourceBlock\x12;\n\tcapacitor\x18\x01 \x03(\x0b\x32(.AnalogSignalProcessor.ResourceOwnership\x12\x37\n\x05opamp\x18\x02 \x03(\x0b\x32(.AnalogSignalProcessor.ResourceOwnership\x12<\n\ncomparator\x18\x03 \x01(\x0b\x32(.AnalogSignalProcessor.ResourceOwnership\x12\x35\n\x03sar\x18\x04 \x01(\x0b\x32(.AnalogSignalProcessor.ResourceOwnership\x1a\x93\x01\n\x10IOCellAllocation\x12\x37\n\x05owner\x18\x01 \x01(\x0b\x32(.AnalogSignalProcessor.ResourceOwnership\x12#\n\x0cio_cell_type\x18\x02 \x01(\x0e\x32\r.Option.Value\x12!\n\nio_cell_id\x18\x03 \x01(\x0e\x32\r.Option.Value\"\xdd\x02\n\x0fStorageResponse\x12\x12\n\nbytes_free\x18\x01 \x01(\r\x12\x13\n\x0b\x62ytes_total\x18\x02 \x01(\r\x12\x17\n\x0fused_percentage\x18\x03 \x01(\x02\x12\x1a\n\x12\x63urrent_page_usage\x18\x04 \x01(\x02\x12\x14\n\x0cpage_0_valid\x18\x05 \x01(\x08\x12\x14\n\x0cpage_1_valid\x18\x06 \x01(\x08\x12\x1f\n\x17minimum_virtual_address\x18\x07 \x01(\r\x12\x1f\n\x17maximum_virtual_address\x18\x08 \x01(\r\x12,\n\tfile_info\x18\t \x03(\x0b\x32\x19.StorageResponse.FileInfo\x12\x0c\n\x04\x64\x61ta\x18\n \x01(\x0c\x1a\x42\n\x08\x46ileInfo\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\nbyte_count\x18\x02 \x01(\r\x12\x14\n\x0cis_directory\x18\x03 \x01(\x08\"\x1b\n\x0b\x41\x63knowledge\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\"6\n\x07Version\x12\r\n\x05major\x18\x01 \x01(\r\x12\r\n\x05minor\x18\x02 \x01(\r\x12\r\n\x05patch\x18\x03 \x01(\r\"I\n\x08\x45ndpoint\x12\x17\n\x06method\x18\x01 \x03(\x0e\x32\x07.Method\x12\x11\n\x03url\x18\x02 \x01(\x0b\x32\x04.URL\x12\x11\n\tdocstring\x18\x03 \x01(\t\"(\n\tEndpoints\x12\x1b\n\x08\x65ndpoint\x18\x01 \x03(\x0b\x32\t.Endpoint\"\x93\t\n\x08Response\x12 \n\x0bstatus_code\x18\x01 \x01(\x0e\x32\x0b.StatusCode\x12.\n\nbytestream\x18\x02 \x01(\x0b\x32\x18.ConfigurationByteStreamH\x00\x12!\n\x07modules\x18\x03 \x01(\x0b\x32\x0e.AnalogModulesH\x00\x12$\n\x0cmodule_types\x18\x04 \x01(\x0b\x32\x0c.ModuleTypesH\x00\x12!\n\nparameters\x18\x05 \x01(\x0b\x32\x0b.ParametersH\x00\x12\x1b\n\x07options\x18\x06 \x01(\x0b\x32\x08.OptionsH\x00\x12\x19\n\x06inputs\x18\x07 \x01(\x0b\x32\x07.InputsH\x00\x12\x1b\n\x07outputs\x18\x08 \x01(\x0b\x32\x08.OutputsH\x00\x12\x15\n\x04nets\x18\t \x01(\x0b\x32\x05.NetsH\x00\x12,\n\x10storage_response\x18\n \x01(\x0b\x32\x10.StorageResponseH\x00\x12)\n\x0bmodule_type\x18\x0b \x01(\x0e\x32\x12.AnalogModule.TypeH\x00\x12\x1b\n\x07\x63ircuit\x18\x0c \x01(\x0b\x32\x08.CircuitH\x00\x12\x16\n\x0cmodule_count\x18\r \x01(\rH\x00\x12\x13\n\tnet_count\x18\x0e \x01(\rH\x00\x12\x13\n\trequested\x18\x0f \x01(\x02H\x00\x12\x12\n\x08realized\x18\x10 \x01(\x02H\x00\x12\x11\n\x07minimum\x18\x11 \x01(\x02H\x00\x12\x11\n\x07maximum\x18\x12 \x01(\x02H\x00\x12%\n\x0coption_value\x18\x13 \x01(\x0e\x32\r.Option.ValueH\x00\x12(\n\x0esystem_options\x18\x14 \x01(\x0b\x32\x0e.SystemOptionsH\x00\x12$\n\x0csystem_state\x18\x15 \x01(\x0e\x32\x0c.SystemStateH\x00\x12\x1e\n\theap_info\x18\x16 \x01(\x0b\x32\t.HeapInfoH\x00\x12\"\n\x0b\x61nalog_info\x18\x17 \x01(\x0b\x32\x0b.AnalogInfoH\x00\x12\x39\n\x17\x61nalog_signal_processor\x18\x18 \x01(\x0b\x32\x16.AnalogSignalProcessorH\x00\x12\x15\n\x0bmodule_fits\x18\x19 \x01(\x08H\x00\x12?\n\x1amodule_clock_configuration\x18\x1a \x01(\x0b\x32\x19.ModuleClockConfigurationH\x00\x12\x45\n\x1dprocessor_clock_configuration\x18\x1b \x01(\x0b\x32\x1c.ProcessorClockConfigurationH\x00\x12\x1a\n\x10has_lookup_table\x18\x1c \x01(\x08H\x00\x12(\n\x0emidi_listeners\x18\x1d \x01(\x0b\x32\x0e.MidiListenersH\x00\x12#\n\x0b\x61\x63knowledge\x18\x1e \x01(\x0b\x32\x0c.AcknowledgeH\x00\x12\x1b\n\x07version\x18\x1f \x01(\x0b\x32\x08.VersionH\x00\x12\x1f\n\tendpoints\x18  \x01(\x0b\x32\n.EndpointsH\x00\x12\"\n\x0clookup_table\x18! \x01(\x0b\x32\x0c.LookupTableB\t\n\x07payload*\xb3\x01\n\x08IOCellId\x12\x0c\n\x08IO_CELL0\x10\x00\x12\x0c\n\x08IO_CELL1\x10\x01\x12\x0c\n\x08IO_CELL2\x10\x02\x12\x0c\n\x08IO_CELL3\x10\x03\x12\x0c\n\x08IO_CELL4\x10\x04\x12\x0c\n\x08IO_CELL5\x10\x05\x12\x0c\n\x08IO_CELL6\x10\x06\x12\x13\n\x0fIO_CELL_DIGITAL\x10\x07\x12\x18\n\x14IO_RAM_TRANSFER_CELL\x10\x08\x12\x16\n\x12INVALID_IO_CELL_ID\x10\t*\xe8\x01\n\x08OutputId\x12\n\n\x06OUTPUT\x10\x00\x12\x07\n\x03TRI\x10\x01\x12\x07\n\x03SAW\x10\x02\x12\n\n\x06SQUARE\x10\x03\x12\x0c\n\x08INTERNAL\x10\x04\x12\n\n\x06SELECT\x10\x05\x12\r\n\tINTEGRATE\x10\x06\x12\n\n\x06INVERT\x10\x07\x12\r\n\tRESET_OUT\x10\x08\x12\x10\n\x0cSAMPLE_PAUSE\x10\t\x12\t\n\x05PULSE\x10\n\x12\x0b\n\x07\x44IGITAL\x10\x0b\x12\x0b\n\x07OUTPUT1\x10\x0c\x12\x0b\n\x07OUTPUT2\x10\r\x12\x13\n\x0fOUTPUT_ID_COUNT\x10\x0e\x12\x15\n\x11INVALID_OUTPUT_ID\x10\x0f*\xed\x02\n\x07InputId\x12\t\n\x05INPUT\x10\x00\x12\n\n\x06INPUT1\x10\x01\x12\n\n\x06INPUT2\x10\x02\x12\n\n\x06INPUT3\x10\x03\x12\n\n\x06INPUT4\x10\x04\x12\x0b\n\x07\x43ONTROL\x10\x05\x12\r\n\tREFERENCE\x10\x06\x12\x10\n\x0cNONINVERTING\x10\x07\x12\r\n\tINVERTING\x10\x08\x12\r\n\tNUMERATOR\x10\t\x12\x0f\n\x0b\x44\x45NOMINATOR\x10\n\x12\t\n\x05RESET\x10\x0b\x12\x05\n\x01X\x10\x0c\x12\x05\n\x01Y\x10\r\x12\x07\n\x03SUM\x10\x0e\x12\x07\n\x03SAR\x10\x0f\x12\'\n#INTERNAL_COMPARATOR_INVERTING_INPUT\x10\x10\x12\x14\n\x10UPPER_DIGITAL_IN\x10\x11\x12\x14\n\x10LOWER_DIGITAL_IN\x10\x12\x12\x0f\n\x0bINTERNAL_IN\x10\x13\x12\x0f\n\x0bSUM_NODE_IN\x10\x14\x12\x12\n\x0eINPUT_ID_COUNT\x10\x15\x12\x14\n\x10INVALID_INPUT_ID\x10\x16*\xb7\x01\n\x07\x43lockId\x12\x0b\n\x07INVALID\x10\x00\x12\x10\n\x0c\x43LOCK5_DELAY\x10\x01\x12\n\n\x06\x43LOCK5\x10\x02\x12\x10\n\x0c\x43LOCK4_DELAY\x10\x03\x12\n\n\x06\x43LOCK4\x10\x04\x12\n\n\x06\x43LOCK3\x10\x05\x12\n\n\x06\x43LOCK2\x10\x06\x12\n\n\x06\x43LOCK1\x10\x07\x12\n\n\x06\x43LOCK0\x10\x08\x12\x13\n\x0f\x43LOCK_POWER_UPS\x10\t\x12\x0e\n\nCLOCK_SYS1\x10\n\x12\x0e\n\nCLOCK_SYS2\x10\x0b*5\n\x0bSystemState\x12\n\n\x06PAUSED\x10\x00\x12\x0b\n\x07RUNNING\x10\x01\x12\r\n\tRESETTING\x10\x02*;\n\x06Method\x12\x08\n\x04POST\x10\x00\x12\x07\n\x03GET\x10\x01\x12\x07\n\x03PUT\x10\x02\x12\t\n\x05PATCH\x10\x03\x12\n\n\x06\x44\x45LETE\x10\x04*\xc0\x04\n\nStatusCode\x12\x06\n\x02OK\x10\x00\x12\x1d\n\x19PRIMARY_CONFIG_BYTESTREAM\x10\x01\x12\x1c\n\x18UPDATE_CONFIG_BYTESTREAM\x10\x02\x12\x13\n\x0fREALIZED_VALUES\x10\x03\x12\x19\n\x15PROTOBUF_DECODE_ERROR\x10\x04\x12\x19\n\x15PROTOBUF_ENCODE_ERROR\x10\x05\x12\x1d\n\x19INVALID_CONFIG_BYTESTREAM\x10\x06\x12\x19\n\x15INVALID_REQUEST_ERROR\x10\x07\x12\x15\n\x11\x43OBS_ENCODE_ERROR\x10\x08\x12\x15\n\x11\x43OBS_DECODE_ERROR\x10\t\x12\x1a\n\x16MAIL_QUOTE_ALLOC_ERROR\x10\n\x12\x19\n\x15USB_HAL_TIMEOUT_ERROR\x10\x0b\x12\x14\n\x10RESPONSE_PAYLOAD\x10\x0c\x12\r\n\tNOT_FOUND\x10\r\x12!\n\x1dINSUFFICIENT_ANALOG_RESOURCES\x10\x0e\x12\x17\n\x13MIDI_LISTENER_ERROR\x10\x0f\x12#\n\x1fLOOKUP_TABLE_VALUE_OUT_OF_RANGE\x10\x10\x12\x14\n\x10MODULE_NOT_FOUND\x10\x11\x12\x17\n\x13PARAMETER_NOT_FOUND\x10\x12\x12\x14\n\x10OPTION_NOT_FOUND\x10\x13\x12\x1b\n\x17MIDI_LISTENER_NOT_FOUND\x10\x14\x12\x1b\n\x17REQUIRES_PAUSED_CIRCUIT\x10\x15\x62\x06proto3')
)

_IOCELLID = _descriptor.EnumDescriptor(
  name='IOCellId',
  full_name='IOCellId',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IO_CELL0', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL1', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL2', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL3', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL4', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL5', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL6', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL_DIGITAL', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_RAM_TRANSFER_CELL', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_IO_CELL_ID', index=9, number=9,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=14026,
  serialized_end=14205,
)
_sym_db.RegisterEnumDescriptor(_IOCELLID)

IOCellId = enum_type_wrapper.EnumTypeWrapper(_IOCELLID)
_OUTPUTID = _descriptor.EnumDescriptor(
  name='OutputId',
  full_name='OutputId',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OUTPUT', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRI', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SAW', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SQUARE', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTERNAL', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SELECT', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTEGRATE', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVERT', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESET_OUT', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SAMPLE_PAUSE', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PULSE', index=10, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIGITAL', index=11, number=11,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUT1', index=12, number=12,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUT2', index=13, number=13,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUT_ID_COUNT', index=14, number=14,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_OUTPUT_ID', index=15, number=15,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=14208,
  serialized_end=14440,
)
_sym_db.RegisterEnumDescriptor(_OUTPUTID)

OutputId = enum_type_wrapper.EnumTypeWrapper(_OUTPUTID)
_INPUTID = _descriptor.EnumDescriptor(
  name='InputId',
  full_name='InputId',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INPUT', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT1', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT2', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT3', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT4', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONTROL', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REFERENCE', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NONINVERTING', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVERTING', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NUMERATOR', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DENOMINATOR', index=10, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESET', index=11, number=11,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='X', index=12, number=12,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Y', index=13, number=13,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM', index=14, number=14,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SAR', index=15, number=15,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTERNAL_COMPARATOR_INVERTING_INPUT', index=16, number=16,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPPER_DIGITAL_IN', index=17, number=17,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOWER_DIGITAL_IN', index=18, number=18,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTERNAL_IN', index=19, number=19,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_NODE_IN', index=20, number=20,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT_ID_COUNT', index=21, number=21,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_INPUT_ID', index=22, number=22,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=14443,
  serialized_end=14808,
)
_sym_db.RegisterEnumDescriptor(_INPUTID)

InputId = enum_type_wrapper.EnumTypeWrapper(_INPUTID)
_CLOCKID = _descriptor.EnumDescriptor(
  name='ClockId',
  full_name='ClockId',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INVALID', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK5_DELAY', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK5', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK4_DELAY', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK4', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK3', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK2', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK1', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK0', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK_POWER_UPS', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK_SYS1', index=10, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK_SYS2', index=11, number=11,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=14811,
  serialized_end=14994,
)
_sym_db.RegisterEnumDescriptor(_CLOCKID)

ClockId = enum_type_wrapper.EnumTypeWrapper(_CLOCKID)
_SYSTEMSTATE = _descriptor.EnumDescriptor(
  name='SystemState',
  full_name='SystemState',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PAUSED', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RUNNING', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESETTING', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=14996,
  serialized_end=15049,
)
_sym_db.RegisterEnumDescriptor(_SYSTEMSTATE)

SystemState = enum_type_wrapper.EnumTypeWrapper(_SYSTEMSTATE)
_METHOD = _descriptor.EnumDescriptor(
  name='Method',
  full_name='Method',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='POST', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GET', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PUT', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PATCH', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELETE', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=15051,
  serialized_end=15110,
)
_sym_db.RegisterEnumDescriptor(_METHOD)

Method = enum_type_wrapper.EnumTypeWrapper(_METHOD)
_STATUSCODE = _descriptor.EnumDescriptor(
  name='StatusCode',
  full_name='StatusCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PRIMARY_CONFIG_BYTESTREAM', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPDATE_CONFIG_BYTESTREAM', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REALIZED_VALUES', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROTOBUF_DECODE_ERROR', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROTOBUF_ENCODE_ERROR', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_CONFIG_BYTESTREAM', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_REQUEST_ERROR', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COBS_ENCODE_ERROR', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COBS_DECODE_ERROR', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAIL_QUOTE_ALLOC_ERROR', index=10, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USB_HAL_TIMEOUT_ERROR', index=11, number=11,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESPONSE_PAYLOAD', index=12, number=12,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_FOUND', index=13, number=13,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INSUFFICIENT_ANALOG_RESOURCES', index=14, number=14,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MIDI_LISTENER_ERROR', index=15, number=15,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOOKUP_TABLE_VALUE_OUT_OF_RANGE', index=16, number=16,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MODULE_NOT_FOUND', index=17, number=17,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PARAMETER_NOT_FOUND', index=18, number=18,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPTION_NOT_FOUND', index=19, number=19,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MIDI_LISTENER_NOT_FOUND', index=20, number=20,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQUIRES_PAUSED_CIRCUIT', index=21, number=21,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=15113,
  serialized_end=15689,
)
_sym_db.RegisterEnumDescriptor(_STATUSCODE)

StatusCode = enum_type_wrapper.EnumTypeWrapper(_STATUSCODE)
IO_CELL0 = 0
IO_CELL1 = 1
IO_CELL2 = 2
IO_CELL3 = 3
IO_CELL4 = 4
IO_CELL5 = 5
IO_CELL6 = 6
IO_CELL_DIGITAL = 7
IO_RAM_TRANSFER_CELL = 8
INVALID_IO_CELL_ID = 9
OUTPUT = 0
TRI = 1
SAW = 2
SQUARE = 3
INTERNAL = 4
SELECT = 5
INTEGRATE = 6
INVERT = 7
RESET_OUT = 8
SAMPLE_PAUSE = 9
PULSE = 10
DIGITAL = 11
OUTPUT1 = 12
OUTPUT2 = 13
OUTPUT_ID_COUNT = 14
INVALID_OUTPUT_ID = 15
INPUT = 0
INPUT1 = 1
INPUT2 = 2
INPUT3 = 3
INPUT4 = 4
CONTROL = 5
REFERENCE = 6
NONINVERTING = 7
INVERTING = 8
NUMERATOR = 9
DENOMINATOR = 10
RESET = 11
X = 12
Y = 13
SUM = 14
SAR = 15
INTERNAL_COMPARATOR_INVERTING_INPUT = 16
UPPER_DIGITAL_IN = 17
LOWER_DIGITAL_IN = 18
INTERNAL_IN = 19
SUM_NODE_IN = 20
INPUT_ID_COUNT = 21
INVALID_INPUT_ID = 22
INVALID = 0
CLOCK5_DELAY = 1
CLOCK5 = 2
CLOCK4_DELAY = 3
CLOCK4 = 4
CLOCK3 = 5
CLOCK2 = 6
CLOCK1 = 7
CLOCK0 = 8
CLOCK_POWER_UPS = 9
CLOCK_SYS1 = 10
CLOCK_SYS2 = 11
PAUSED = 0
RUNNING = 1
RESETTING = 2
POST = 0
GET = 1
PUT = 2
PATCH = 3
DELETE = 4
OK = 0
PRIMARY_CONFIG_BYTESTREAM = 1
UPDATE_CONFIG_BYTESTREAM = 2
REALIZED_VALUES = 3
PROTOBUF_DECODE_ERROR = 4
PROTOBUF_ENCODE_ERROR = 5
INVALID_CONFIG_BYTESTREAM = 6
INVALID_REQUEST_ERROR = 7
COBS_ENCODE_ERROR = 8
COBS_DECODE_ERROR = 9
MAIL_QUOTE_ALLOC_ERROR = 10
USB_HAL_TIMEOUT_ERROR = 11
RESPONSE_PAYLOAD = 12
NOT_FOUND = 13
INSUFFICIENT_ANALOG_RESOURCES = 14
MIDI_LISTENER_ERROR = 15
LOOKUP_TABLE_VALUE_OUT_OF_RANGE = 16
MODULE_NOT_FOUND = 17
PARAMETER_NOT_FOUND = 18
OPTION_NOT_FOUND = 19
MIDI_LISTENER_NOT_FOUND = 20
REQUIRES_PAUSED_CIRCUIT = 21


_OPTION_ID = _descriptor.EnumDescriptor(
  name='Id',
  full_name='Option.Id',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TRIGGER_MODE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPAMP_MODE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CHOPPER_GAIN', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMPARATOR_INPUT_PHASE', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMPARATOR_OUTPUT', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMPARE_TO', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONTROL_SIGNAL_POLARITY', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DECAY_SHAPE', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DECAY_TO', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DETECTION_TO_SAMPLE_DELAY', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PULSE_HIGH_WHEN', index=10, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXTERNAL_SIGNAL_ALLOWED', index=11, number=11,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_ORDER', index=12, number=12,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_TOPOLOGY', index=13, number=13,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_TYPE', index=14, number=14,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_STAGE', index=15, number=15,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HYSTERESIS', index=16, number=16,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL_MODE', index=17, number=17,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL_TYPE', index=18, number=18,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT_PHASE', index=19, number=19,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT_POLARITY', index=20, number=20,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT1_POLARITY', index=21, number=21,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT2_POLARITY', index=22, number=22,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT3_POLARITY', index=23, number=23,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT4_POLARITY', index=24, number=24,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT_TYPE', index=25, number=25,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT_WIRING', index=26, number=26,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOWER_DIGITAL_OUTPUT_MODE', index=27, number=27,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOWER_DIGITAL_OUTPUT_POLARITY', index=28, number=28,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUT_MODE', index=29, number=29,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUT_PHASE', index=30, number=30,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUT_POLARITY', index=31, number=31,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUT_SYNC', index=32, number=32,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUT_TYPE', index=33, number=33,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PEAK_AMPLITUDE_TARGET', index=34, number=34,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PEAK_TO_DETECT', index=35, number=35,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PHYSICAL_ADDRESS', index=36, number=36,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POLARITY', index=37, number=37,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RAM_TRANSFER_TRIGGER', index=38, number=38,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RECTIFIER_MODE', index=39, number=39,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SAWTOOTH_DIRECTION', index=40, number=40,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYNC_CLOCK_EDGE', index=41, number=41,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPPER_DIGITAL_OUTPUT_MODE', index=42, number=42,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPPER_DIGITAL_OUTPUT_POLARITY', index=43, number=43,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HOLD_CONTROL_MODE', index=44, number=44,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEPENDENT_VARIABLE', index=45, number=45,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=115,
  serialized_end=1101,
)
_sym_db.RegisterEnumDescriptor(_OPTION_ID)

_OPTION_VALUE = _descriptor.EnumDescriptor(
  name='Value',
  full_name='Option.Value',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DIGITAL_OUTPUT', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REFERENCE_VOLTAGE_OUTPUT', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LINEAR', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXPONENTIAL', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SIGNAL_GROUND', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REFERENCE_VOLTAGE_LEVEL', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ONE_PHASE', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO_DELAY', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRIANGLE_RISING', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRIANGLE_FALLING', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOWPASS', index=10, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HIGHPASS', index=11, number=11,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BANDPASS', index=12, number=12,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALLPASS', index=13, number=13,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TYPE_I', index=14, number=14,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TYPE_II', index=15, number=15,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNDEFINED', index=16, number=16,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FIRST', index=17, number=17,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SECOND', index=18, number=18,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SINGLE', index=19, number=19,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CASCADED', index=20, number=20,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZERO_MILLIVOLTS', index=21, number=21,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEN_MILLIVOLTS', index=22, number=22,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT_DISABLED', index=23, number=23,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVERTING', index=24, number=24,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NONINVERTING', index=25, number=25,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIVE_HIGH', index=26, number=26,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIVE_LOW', index=27, number=27,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NONINVERTED', index=28, number=28,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVERTED', index=29, number=29,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYNC_DISABLED', index=30, number=30,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYNC_TO_PHASE1', index=31, number=31,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYNC_TO_PHASE2', index=32, number=32,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POSITIVE_PEAK', index=33, number=33,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NEGATIVE_PEAK', index=34, number=34,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POSITIVE', index=35, number=35,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NEGATIVE', index=36, number=36,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FULL_WAVE', index=37, number=37,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POSITIVE_HALF_WAVE', index=38, number=38,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NEGATIVE_HALF_WAVE', index=39, number=39,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RISING', index=40, number=40,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FALLING', index=41, number=41,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PHASE1', index=42, number=42,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PHASE2', index=43, number=43,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RISING_EDGE', index=44, number=44,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FALLING_EDGE', index=45, number=45,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRIANGLE_WAVE', index=46, number=46,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SQUARE_WAVE', index=47, number=47,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='I', index=48, number=48,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IA', index=49, number=49,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='II', index=50, number=50,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIGITAL', index=51, number=51,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RAM_TRANSFER_CELL', index=52, number=52,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL_DISABLED', index=53, number=53,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT', index=54, number=54,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUT', index=55, number=55,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INDEPENDENT_AMPLIFIER', index=56, number=56,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOW_OFFSET_CHOPPER', index=57, number=57,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT_BYPASS', index=58, number=58,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT_SAMPLE_AND_HOLD', index=59, number=59,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AMPLIFIER', index=60, number=60,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONTROL_SIGNAL', index=61, number=61,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUT_BYPASS', index=62, number=62,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUT_SAMPLE_AND_HOLD', index=63, number=63,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VMR', index=64, number=64,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SINGLE_ENDED_DIGITAL', index=65, number=65,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIFFERENTIAL', index=66, number=66,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVERTED_DIFFERENTIAL', index=67, number=67,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SINGLE_ENDED_POSITIVE', index=68, number=68,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SINGLE_ENDED_NEGATIVE', index=69, number=69,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZERO_DB', index=70, number=70,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEN_DB', index=71, number=71,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TWENTY_DB', index=72, number=72,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='THIRTY_DB', index=73, number=73,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FORTY_DB', index=74, number=74,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FIFTY_DB', index=75, number=75,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SIXTY_DB', index=76, number=76,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIGITAL_OUTPUT_DISABLED', index=77, number=77,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK_A', index=78, number=78,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK_B', index=79, number=79,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMPARATOR_INPUT', index=80, number=80,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RAM_TRANSFER_PULSE', index=81, number=81,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUTONULL_OSC_START_DONE', index=82, number=82,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUTOMATIC', index=83, number=83,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EVENT_DRIVEN', index=84, number=84,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK_SYNC', index=85, number=85,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRIGGER', index=86, number=86,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ARM', index=87, number=87,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENABLED', index=88, number=88,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DISABLED', index=89, number=89,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL0', index=90, number=90,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL1', index=91, number=91,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL2', index=92, number=92,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL3', index=93, number=93,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL4', index=94, number=94,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL5', index=95, number=95,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL6', index=96, number=96,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_CELL_DIGITAL', index=97, number=97,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO_RAM_TRANSFER_CELL', index=98, number=98,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GROUND', index=99, number=99,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SECOND_INPUT', index=100, number=100,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VARIABLE_REFERENCE', index=101, number=101,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SAMPLE_HOLD', index=102, number=102,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PAUSE_RUN', index=103, number=103,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DC_GAIN', index=104, number=104,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HIGH_FREQUENCY_GAIN', index=105, number=105,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POLE_FREQUENCY', index=106, number=106,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZERO_FREQUENCY', index=107, number=107,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEFAULT', index=108, number=108,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CHOPPER_STABILIZED', index=109, number=109,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IMMEDIATE', index=110, number=110,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HOLD', index=111, number=111,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HALF', index=112, number=112,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONTINUOUS', index=113, number=113,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID', index=114, number=114,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1104,
  serialized_end=3070,
)
_sym_db.RegisterEnumDescriptor(_OPTION_VALUE)

_PARAMETER_ID = _descriptor.EnumDescriptor(
  name='Id',
  full_name='Parameter.Id',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CENTER_FREQUENCY', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CORNER_FREQUENCY', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COUNTER_RESET_VALUE', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DC_GAIN', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DECAY', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DECAY_TIME_CONSTANT', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELAY_MICROSECONDS', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIFFERENTIATION_CONSTANT', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIVISOR', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DUTY_CYCLE', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN', index=10, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_INPUT1', index=11, number=11,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_INPUT2', index=12, number=12,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_INPUT3', index=13, number=13,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_INPUT4', index=14, number=14,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HIGH_FREQUENCY_GAIN', index=15, number=15,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCALE_FACTOR', index=16, number=16,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCALE_FACTOR_INPUT1', index=17, number=17,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCALE_FACTOR_INPUT2', index=18, number=18,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCALE_FACTOR_INPUT3', index=19, number=19,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULTIPLICATION_FACTOR', index=20, number=20,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OSCILLATION_FREQUENCY', index=21, number=21,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUT_VOLTAGE_LIMIT', index=22, number=22,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PEAK_AMPLITUDE', index=23, number=23,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PEAK_RATE', index=24, number=24,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POLE_FREQUENCY', index=25, number=25,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POLE_QUALITY_FACTOR', index=26, number=26,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='QUALITY_FACTOR', index=27, number=27,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RANGE_PERCENTAGE', index=28, number=28,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REFERENCE_VOLTAGE', index=29, number=29,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WAVE_MAXIMUM_VOLTAGE', index=30, number=30,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WAVE_MINIMUM_VOLTAGE', index=31, number=31,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZERO_FREQUENCY', index=32, number=32,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZERO_QUALITY_FACTOR', index=33, number=33,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3354,
  serialized_end=4077,
)
_sym_db.RegisterEnumDescriptor(_PARAMETER_ID)

_PARAMETER_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='Parameter.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='BYTE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONSTANT', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FREQUENCY_KHZ', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_TYPE', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PERCENTAGE', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='QUALITY_FACTOR_TYPE', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RATE', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TIME', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VOLTAGE', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID', index=9, number=9,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4080,
  serialized_end=4231,
)
_sym_db.RegisterEnumDescriptor(_PARAMETER_TYPE)

_PROCESSORCLOCKCONFIGURATION_SYSCLOCKTIMEBASE = _descriptor.EnumDescriptor(
  name='SysClockTimebase',
  full_name='ProcessorClockConfiguration.SysClockTimebase',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SYS1', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYS2', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4699,
  serialized_end=4737,
)
_sym_db.RegisterEnumDescriptor(_PROCESSORCLOCKCONFIGURATION_SYSCLOCKTIMEBASE)

_ANALOGMODULE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='AnalogModule.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='COMPARATOR', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELAY_LINE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIFFERENTIATOR', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIVIDER', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIVIDER_HOLD', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_LOWPASS', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_LOWPASS_LF', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_HIGHPASS', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_HIGHPASS_LF', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_ALLPASS', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_ALLPASS_LF', index=10, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_POLE_ZERO', index=11, number=11,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_POLE_ZERO_LF', index=12, number=12,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_BIQUAD_LOWPASS', index=13, number=13,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_BIQUAD_LOWPASS_LF', index=14, number=14,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_BIQUAD_HIGHPASS', index=15, number=15,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_BIQUAD_HIGHPASS_LF', index=16, number=16,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_BIQUAD_BANDPASS', index=17, number=17,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_BIQUAD_BANDPASS_LF', index=18, number=18,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_BIQUAD_BANDSTOP', index=19, number=19,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_BIQUAD_BANDSTOP_LF', index=20, number=20,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_BIQUAD_POLE_ZERO', index=21, number=21,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_VOLTAGE_CONTROLLED', index=22, number=22,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_HALF', index=23, number=23,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_HOLD', index=24, number=24,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_INV', index=25, number=25,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_LIMITER', index=26, number=26,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_POLARITY', index=27, number=27,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_POLARITY_LOWPASS', index=28, number=28,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_SWITCH', index=29, number=29,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_SWITCH_LOWPASS', index=30, number=30,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_VOLTAGE_CONTROLLED', index=31, number=31,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_VOLTAGE_CONTROLLED_CASCADED', index=32, number=32,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HOLD', index=33, number=33,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HOLD_VOLTAGE_CONTROLLED', index=34, number=34,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTEGRATOR', index=35, number=35,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTEGRATOR_HOLD', index=36, number=36,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTEGRATOR_RESET', index=37, number=37,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULTIPLIER', index=38, number=38,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULTIPLIER_HOLD', index=39, number=39,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OSCILLATOR_SAW', index=40, number=40,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OSCILLATOR_SAW_SQR', index=41, number=41,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OSCILLATOR_SINE', index=42, number=42,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OSCILLATOR_SINE_LF', index=43, number=43,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OSCILLATOR_TRI_SQR', index=44, number=44,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OSCILLATOR_VOLTAGE_CONTROLLED', index=45, number=45,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PEAK_DETECTOR', index=46, number=46,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PEAK_DETECTOR_RESET', index=47, number=47,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PEAK_DETECTOR_TAU', index=48, number=48,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PEAK_DETECTOR_TAU_SYNC', index=49, number=49,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RECTIFIER_FILTER', index=50, number=50,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RECTIFIER', index=51, number=51,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RECTIFIER_HOLD', index=52, number=52,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SQUARE_ROOT', index=53, number=53,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_TWO', index=54, number=54,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_THREE', index=55, number=55,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_FOUR', index=56, number=56,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_INVERT_TWO', index=57, number=57,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_INVERT_THREE', index=58, number=58,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_FILTER_TWO', index=59, number=59,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_FILTER_THREE', index=60, number=60,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_INTEGRATE_TWO', index=61, number=61,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_INTEGRATE_TWO_RESET', index=62, number=62,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_INTEGRATE_THREE', index=63, number=63,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_INTEGRATE_THREE_RESET', index=64, number=64,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_BIQUAD', index=65, number=65,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRANSFER_FUNCTION', index=66, number=66,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VOLTAGE_CONSTANT', index=67, number=67,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZERO_CROSSING_DETECTOR', index=68, number=68,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ARBITRARY_WAVE_GEN', index=69, number=69,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ARBITRARY_WAVE_GEN_RESET', index=70, number=70,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DUAL_ARBITRARY_WAVE_GEN', index=71, number=71,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DUAL_ARBITRARY_WAVE_GEN_RESET', index=72, number=72,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUDIO_IN', index=73, number=73,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUDIO_OUT', index=74, number=74,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ULTRASONIC_IN', index=75, number=75,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ULTRASONIC_OUT', index=76, number=76,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUT_CELL', index=77, number=77,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT_CELL', index=78, number=78,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIGITAL_OUTPUT_CELL', index=79, number=79,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ANALOG_TO_DIGITAL_CONVERTER', index=80, number=80,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELTA_SIGMA_MODULATOR', index=81, number=81,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELTA_SIGMA_MODULATOR_EXT_REF', index=82, number=82,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=5231,
  serialized_end=7123,
)
_sym_db.RegisterEnumDescriptor(_ANALOGMODULE_TYPE)

_SYSTEMOPTION_ID = _descriptor.EnumDescriptor(
  name='Id',
  full_name='SystemOption.Id',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TEST_MODE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REALIZED_VALUE_RESPONSE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HALF_SPEED_MASTER_CLOCK', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=8944,
  serialized_end=9021,
)
_sym_db.RegisterEnumDescriptor(_SYSTEMOPTION_ID)

_PATHCOMPONENT_RESOURCEID = _descriptor.EnumDescriptor(
  name='ResourceId',
  full_name='PathComponent.ResourceId',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CIRCUIT', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BYTESTREAM', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPDATE_BYTESTREAM', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MODULE', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MODULES', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NETS', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STORAGE', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PARAMETER', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PARAMETERS', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPTION', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPTIONS', index=10, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYSTEM', index=11, number=11,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TYPE', index=12, number=12,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUTS', index=13, number=13,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUTS', index=14, number=14,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEBUG', index=15, number=15,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CIRCUITS', index=16, number=16,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOAD', index=17, number=17,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEFAULT', index=18, number=18,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COUNT', index=19, number=19,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NET', index=20, number=21,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQUESTED', index=21, number=22,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REALIZED', index=22, number=23,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MINIMUM', index=23, number=24,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAXIMUM', index=24, number=25,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VALUE', index=25, number=26,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATE', index=26, number=27,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESOURCE', index=27, number=28,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HEAP', index=28, number=29,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ANALOG', index=29, number=30,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FITS', index=30, number=31,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK', index=31, number=32,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HAS_LOOKUP_TABLE', index=32, number=33,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOOKUP_TABLE', index=33, number=34,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MIDI', index=34, number=35,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LISTENERS', index=35, number=36,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LISTENER', index=36, number=37,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SWEEP', index=37, number=38,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PING', index=38, number=39,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VERSION', index=39, number=40,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENDPOINTS', index=40, number=41,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STARTUP', index=41, number=42,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DISCONNECT', index=42, number=43,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PHASE', index=43, number=44,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=9370,
  serialized_end=9955,
)
_sym_db.RegisterEnumDescriptor(_PATHCOMPONENT_RESOURCEID)

_STORAGEDEBUGREQUEST_COMMAND = _descriptor.EnumDescriptor(
  name='Command',
  full_name='StorageDebugRequest.Command',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CAT', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LS', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PUT', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REMOVE', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RENAME', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MKDIR', index=5, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=10130,
  serialized_end=10200,
)
_sym_db.RegisterEnumDescriptor(_STORAGEDEBUGREQUEST_COMMAND)


_OPTION = _descriptor.Descriptor(
  name='Option',
  full_name='Option',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Option.id', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='Option.value', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='valid_values', full_name='Option.valid_values', index=2,
      number=3, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _OPTION_ID,
    _OPTION_VALUE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13,
  serialized_end=3070,
)


_PARAMETER = _descriptor.Descriptor(
  name='Parameter',
  full_name='Parameter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Parameter.id', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='Parameter.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='requested', full_name='Parameter.requested', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='realized', full_name='Parameter.realized', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='minimum', full_name='Parameter.minimum', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maximum', full_name='Parameter.maximum', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interpolation_in_progress', full_name='Parameter.interpolation_in_progress', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interpolation_increment', full_name='Parameter.interpolation_increment', index=7,
      number=8, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='current_interpolation_step', full_name='Parameter.current_interpolation_step', index=8,
      number=9, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interpolation_step_count', full_name='Parameter.interpolation_step_count', index=9,
      number=10, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PARAMETER_ID,
    _PARAMETER_TYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3073,
  serialized_end=4231,
)


_PARAMETERSWEEP = _descriptor.Descriptor(
  name='ParameterSweep',
  full_name='ParameterSweep',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='target_value', full_name='ParameterSweep.target_value', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='duration_microseconds', full_name='ParameterSweep.duration_microseconds', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='step_count', full_name='ParameterSweep.step_count', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4233,
  serialized_end=4322,
)


_MODULECLOCKCONFIGURATION = _descriptor.Descriptor(
  name='ModuleClockConfiguration',
  full_name='ModuleClockConfiguration',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='clock_a', full_name='ModuleClockConfiguration.clock_a', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clock_b', full_name='ModuleClockConfiguration.clock_b', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4324,
  serialized_end=4404,
)


_PROCESSORCLOCKCONFIGURATION_SYSCLOCKCONFIGURATION = _descriptor.Descriptor(
  name='SysClockConfiguration',
  full_name='ProcessorClockConfiguration.SysClockConfiguration',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ProcessorClockConfiguration.SysClockConfiguration.id', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='divisor', full_name='ProcessorClockConfiguration.SysClockConfiguration.divisor', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timebase', full_name='ProcessorClockConfiguration.SysClockConfiguration.timebase', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4570,
  serialized_end=4697,
)

_PROCESSORCLOCKCONFIGURATION = _descriptor.Descriptor(
  name='ProcessorClockConfiguration',
  full_name='ProcessorClockConfiguration',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sys_clock', full_name='ProcessorClockConfiguration.sys_clock', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='master_clock_frequency', full_name='ProcessorClockConfiguration.master_clock_frequency', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='wait_for_clock_sync', full_name='ProcessorClockConfiguration.wait_for_clock_sync', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_PROCESSORCLOCKCONFIGURATION_SYSCLOCKCONFIGURATION, ],
  enum_types=[
    _PROCESSORCLOCKCONFIGURATION_SYSCLOCKTIMEBASE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4407,
  serialized_end=4737,
)


_LOOKUPTABLE = _descriptor.Descriptor(
  name='LookupTable',
  full_name='LookupTable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='LookupTable.data', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='minimum_possible_value', full_name='LookupTable.minimum_possible_value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maximum_possible_value', full_name='LookupTable.maximum_possible_value', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4739,
  serialized_end=4830,
)


_ANALOGMODULE_INPUT_ENABLEDIF = _descriptor.Descriptor(
  name='EnabledIf',
  full_name='AnalogModule.Input.EnabledIf',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='option_id', full_name='AnalogModule.Input.EnabledIf.option_id', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='option_value', full_name='AnalogModule.Input.EnabledIf.option_value', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5149,
  serialized_end=5228,
)

_ANALOGMODULE_INPUT = _descriptor.Descriptor(
  name='Input',
  full_name='AnalogModule.Input',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='AnalogModule.Input.id', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='conditionally_enabled', full_name='AnalogModule.Input.conditionally_enabled', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enabled_if', full_name='AnalogModule.Input.enabled_if', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ANALOGMODULE_INPUT_ENABLEDIF, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5036,
  serialized_end=5228,
)

_ANALOGMODULE = _descriptor.Descriptor(
  name='AnalogModule',
  full_name='AnalogModule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='AnalogModule.id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='AnalogModule.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parameters', full_name='AnalogModule.parameters', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='options', full_name='AnalogModule.options', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clock_configuration', full_name='AnalogModule.clock_configuration', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='has_lookup_table', full_name='AnalogModule.has_lookup_table', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ANALOGMODULE_INPUT, ],
  enum_types=[
    _ANALOGMODULE_TYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4833,
  serialized_end=7123,
)


_OUTPUTADDRESS = _descriptor.Descriptor(
  name='OutputAddress',
  full_name='OutputAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='module_id', full_name='OutputAddress.module_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_id', full_name='OutputAddress.output_id', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7125,
  serialized_end=7189,
)


_INPUTADDRESS = _descriptor.Descriptor(
  name='InputAddress',
  full_name='InputAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='module_id', full_name='InputAddress.module_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input_id', full_name='InputAddress.input_id', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7191,
  serialized_end=7252,
)


_NET = _descriptor.Descriptor(
  name='Net',
  full_name='Net',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='output_address', full_name='Net.output_address', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input_address', full_name='Net.input_address', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7254,
  serialized_end=7337,
)


_CONFIGURATIONBYTESTREAM = _descriptor.Descriptor(
  name='ConfigurationByteStream',
  full_name='ConfigurationByteStream',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='ConfigurationByteStream.data', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7339,
  serialized_end=7378,
)


_MIDILISTENER_NOTE_NOTETOPARAMETER = _descriptor.Descriptor(
  name='NoteToParameter',
  full_name='MidiListener.Note.NoteToParameter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='values', full_name='MidiListener.Note.NoteToParameter.values', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7814,
  serialized_end=7847,
)

_MIDILISTENER_NOTE_NOTETOOPTION = _descriptor.Descriptor(
  name='NoteToOption',
  full_name='MidiListener.Note.NoteToOption',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='values', full_name='MidiListener.Note.NoteToOption.values', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7849,
  serialized_end=7894,
)

_MIDILISTENER_NOTE = _descriptor.Descriptor(
  name='Note',
  full_name='MidiListener.Note',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='custom_value_map', full_name='MidiListener.Note.custom_value_map', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parameter_map', full_name='MidiListener.Note.parameter_map', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='option_map', full_name='MidiListener.Note.option_map', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_MIDILISTENER_NOTE_NOTETOPARAMETER, _MIDILISTENER_NOTE_NOTETOOPTION, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='on_note_received', full_name='MidiListener.Note.on_note_received',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=7664,
  serialized_end=7914,
)

_MIDILISTENER_TRIGGER = _descriptor.Descriptor(
  name='Trigger',
  full_name='MidiListener.Trigger',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parameter_value', full_name='MidiListener.Trigger.parameter_value', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='option_value', full_name='MidiListener.Trigger.option_value', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='on_triggered', full_name='MidiListener.Trigger.on_triggered',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=7916,
  serialized_end=8007,
)

_MIDILISTENER_GATE = _descriptor.Descriptor(
  name='Gate',
  full_name='MidiListener.Gate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parameter_value_open', full_name='MidiListener.Gate.parameter_value_open', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='option_value_open', full_name='MidiListener.Gate.option_value_open', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parameter_value_closed', full_name='MidiListener.Gate.parameter_value_closed', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='option_value_closed', full_name='MidiListener.Gate.option_value_closed', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='on_gate_opened', full_name='MidiListener.Gate.on_gate_opened',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='on_gate_closed', full_name='MidiListener.Gate.on_gate_closed',
      index=1, containing_type=None, fields=[]),
  ],
  serialized_start=8010,
  serialized_end=8208,
)

_MIDILISTENER_CC_PARAMETERVALUERANGE = _descriptor.Descriptor(
  name='ParameterValueRange',
  full_name='MidiListener.CC.ParameterValueRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='MidiListener.CC.ParameterValueRange.min', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max', full_name='MidiListener.CC.ParameterValueRange.max', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cc_min', full_name='MidiListener.CC.ParameterValueRange.cc_min', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cc_max', full_name='MidiListener.CC.ParameterValueRange.cc_max', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8388,
  serialized_end=8467,
)

_MIDILISTENER_CC_OPTIONVALUERANGE_ITEM = _descriptor.Descriptor(
  name='Item',
  full_name='MidiListener.CC.OptionValueRange.Item',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='MidiListener.CC.OptionValueRange.Item.value', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cc_min', full_name='MidiListener.CC.OptionValueRange.Item.cc_min', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cc_max_exclusive', full_name='MidiListener.CC.OptionValueRange.Item.cc_max_exclusive', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8545,
  serialized_end=8623,
)

_MIDILISTENER_CC_OPTIONVALUERANGE = _descriptor.Descriptor(
  name='OptionValueRange',
  full_name='MidiListener.CC.OptionValueRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='MidiListener.CC.OptionValueRange.items', index=0,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_MIDILISTENER_CC_OPTIONVALUERANGE_ITEM, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8470,
  serialized_end=8623,
)

_MIDILISTENER_CC = _descriptor.Descriptor(
  name='CC',
  full_name='MidiListener.CC',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='number', full_name='MidiListener.CC.number', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='match_any', full_name='MidiListener.CC.match_any', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parameter_value_range', full_name='MidiListener.CC.parameter_value_range', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='option_value_range', full_name='MidiListener.CC.option_value_range', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_MIDILISTENER_CC_PARAMETERVALUERANGE, _MIDILISTENER_CC_OPTIONVALUERANGE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='on_cc_changed', full_name='MidiListener.CC.on_cc_changed',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=8211,
  serialized_end=8640,
)

_MIDILISTENER = _descriptor.Descriptor(
  name='MidiListener',
  full_name='MidiListener',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='MidiListener.id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel', full_name='MidiListener.channel', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='module_id', full_name='MidiListener.module_id', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parameter_id', full_name='MidiListener.parameter_id', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='option_id', full_name='MidiListener.option_id', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='note', full_name='MidiListener.note', index=5,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='trigger', full_name='MidiListener.trigger', index=6,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='gate', full_name='MidiListener.gate', index=7,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cc', full_name='MidiListener.cc', index=8,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_MIDILISTENER_NOTE, _MIDILISTENER_TRIGGER, _MIDILISTENER_GATE, _MIDILISTENER_CC, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='target', full_name='MidiListener.target',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='type', full_name='MidiListener.type',
      index=1, containing_type=None, fields=[]),
  ],
  serialized_start=7381,
  serialized_end=8658,
)


_CIRCUIT = _descriptor.Descriptor(
  name='Circuit',
  full_name='Circuit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Circuit.id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='modules', full_name='Circuit.modules', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='nets', full_name='Circuit.nets', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='midi_listeners', full_name='Circuit.midi_listeners', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lookup_table', full_name='Circuit.lookup_table', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='processor_clock_configuration', full_name='Circuit.processor_clock_configuration', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8661,
  serialized_end=8878,
)


_SYSTEMOPTION = _descriptor.Descriptor(
  name='SystemOption',
  full_name='SystemOption',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='SystemOption.id', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enabled', full_name='SystemOption.enabled', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SYSTEMOPTION_ID,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8881,
  serialized_end=9021,
)


_PATHCOMPONENT = _descriptor.Descriptor(
  name='PathComponent',
  full_name='PathComponent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource_id', full_name='PathComponent.resource_id', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='module_type', full_name='PathComponent.module_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parameter_id', full_name='PathComponent.parameter_id', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='option_id', full_name='PathComponent.option_id', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='system_option_id', full_name='PathComponent.system_option_id', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input_id', full_name='PathComponent.input_id', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_id', full_name='PathComponent.output_id', index=6,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='integer_argument', full_name='PathComponent.integer_argument', index=7,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='string_argument', full_name='PathComponent.string_argument', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PATHCOMPONENT_RESOURCEID,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='type', full_name='PathComponent.type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=9024,
  serialized_end=9963,
)


_URL = _descriptor.Descriptor(
  name='URL',
  full_name='URL',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path_components', full_name='URL.path_components', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9965,
  serialized_end=10011,
)


_STORAGEDEBUGREQUEST = _descriptor.Descriptor(
  name='StorageDebugRequest',
  full_name='StorageDebugRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='command', full_name='StorageDebugRequest.command', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='path', full_name='StorageDebugRequest.path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='new_path', full_name='StorageDebugRequest.new_path', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='StorageDebugRequest.data', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _STORAGEDEBUGREQUEST_COMMAND,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10014,
  serialized_end=10200,
)


_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='method', full_name='Request.method', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='url', full_name='Request.url', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='circuit', full_name='Request.circuit', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='module', full_name='Request.module', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='net', full_name='Request.net', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='midi_listener', full_name='Request.midi_listener', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='system_state', full_name='Request.system_state', index=6,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='storage_debug_request', full_name='Request.storage_debug_request', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='requested', full_name='Request.requested', index=8,
      number=9, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='option_value', full_name='Request.option_value', index=9,
      number=10, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='system_option_enabled', full_name='Request.system_option_enabled', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bytestream', full_name='Request.bytestream', index=11,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='module_clock_configuration', full_name='Request.module_clock_configuration', index=12,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='processor_clock_configuration', full_name='Request.processor_clock_configuration', index=13,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parameter_sweep', full_name='Request.parameter_sweep', index=14,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lookup_table', full_name='Request.lookup_table', index=15,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='Request.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=10203,
  serialized_end=10840,
)


_INPUTS = _descriptor.Descriptor(
  name='Inputs',
  full_name='Inputs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='Inputs.input', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10842,
  serialized_end=10886,
)


_OUTPUTS = _descriptor.Descriptor(
  name='Outputs',
  full_name='Outputs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='output', full_name='Outputs.output', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10888,
  serialized_end=10924,
)


_ANALOGMODULES = _descriptor.Descriptor(
  name='AnalogModules',
  full_name='AnalogModules',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='module', full_name='AnalogModules.module', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10926,
  serialized_end=10972,
)


_NETS = _descriptor.Descriptor(
  name='Nets',
  full_name='Nets',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='net', full_name='Nets.net', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10974,
  serialized_end=10999,
)


_PARAMETERS = _descriptor.Descriptor(
  name='Parameters',
  full_name='Parameters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parameter', full_name='Parameters.parameter', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11001,
  serialized_end=11044,
)


_SYSTEMOPTIONS = _descriptor.Descriptor(
  name='SystemOptions',
  full_name='SystemOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='system_option', full_name='SystemOptions.system_option', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11046,
  serialized_end=11099,
)


_OPTIONS = _descriptor.Descriptor(
  name='Options',
  full_name='Options',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='option', full_name='Options.option', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11101,
  serialized_end=11135,
)


_MODULETYPES = _descriptor.Descriptor(
  name='ModuleTypes',
  full_name='ModuleTypes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='module_type', full_name='ModuleTypes.module_type', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11137,
  serialized_end=11191,
)


_MIDILISTENERS = _descriptor.Descriptor(
  name='MidiListeners',
  full_name='MidiListeners',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='midi_listener', full_name='MidiListeners.midi_listener', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11193,
  serialized_end=11246,
)


_HEAPINFO = _descriptor.Descriptor(
  name='HeapInfo',
  full_name='HeapInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bytes_free', full_name='HeapInfo.bytes_free', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bytes_total', full_name='HeapInfo.bytes_total', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='used_percentage', full_name='HeapInfo.used_percentage', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11248,
  serialized_end=11324,
)


_ANALOGINFO = _descriptor.Descriptor(
  name='AnalogInfo',
  full_name='AnalogInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='capacitors', full_name='AnalogInfo.capacitors', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='opamps', full_name='AnalogInfo.opamps', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='iocells', full_name='AnalogInfo.iocells', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='comparators', full_name='AnalogInfo.comparators', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sars', full_name='AnalogInfo.sars', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lookup_table', full_name='AnalogInfo.lookup_table', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='counter', full_name='AnalogInfo.counter', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='resource_block_used_percentage', full_name='AnalogInfo.resource_block_used_percentage', index=7,
      number=8, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='io_cell_used_percentage', full_name='AnalogInfo.io_cell_used_percentage', index=8,
      number=9, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='spans_block_boundary', full_name='AnalogInfo.spans_block_boundary', index=9,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11327,
  serialized_end=11569,
)


_ANALOGSIGNALPROCESSOR_RESOURCEOWNERSHIP = _descriptor.Descriptor(
  name='ResourceOwnership',
  full_name='AnalogSignalProcessor.ResourceOwnership',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='free', full_name='AnalogSignalProcessor.ResourceOwnership.free', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='module_id', full_name='AnalogSignalProcessor.ResourceOwnership.module_id', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11840,
  serialized_end=11892,
)

_ANALOGSIGNALPROCESSOR_RESOURCEBLOCK = _descriptor.Descriptor(
  name='ResourceBlock',
  full_name='AnalogSignalProcessor.ResourceBlock',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='capacitor', full_name='AnalogSignalProcessor.ResourceBlock.capacitor', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='opamp', full_name='AnalogSignalProcessor.ResourceBlock.opamp', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='comparator', full_name='AnalogSignalProcessor.ResourceBlock.comparator', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sar', full_name='AnalogSignalProcessor.ResourceBlock.sar', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11895,
  serialized_end=12145,
)

_ANALOGSIGNALPROCESSOR_IOCELLALLOCATION = _descriptor.Descriptor(
  name='IOCellAllocation',
  full_name='AnalogSignalProcessor.IOCellAllocation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='owner', full_name='AnalogSignalProcessor.IOCellAllocation.owner', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='io_cell_type', full_name='AnalogSignalProcessor.IOCellAllocation.io_cell_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='io_cell_id', full_name='AnalogSignalProcessor.IOCellAllocation.io_cell_id', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12148,
  serialized_end=12295,
)

_ANALOGSIGNALPROCESSOR = _descriptor.Descriptor(
  name='AnalogSignalProcessor',
  full_name='AnalogSignalProcessor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource_block', full_name='AnalogSignalProcessor.resource_block', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='io_cell', full_name='AnalogSignalProcessor.io_cell', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lookup_table', full_name='AnalogSignalProcessor.lookup_table', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='counter', full_name='AnalogSignalProcessor.counter', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ANALOGSIGNALPROCESSOR_RESOURCEOWNERSHIP, _ANALOGSIGNALPROCESSOR_RESOURCEBLOCK, _ANALOGSIGNALPROCESSOR_IOCELLALLOCATION, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11572,
  serialized_end=12295,
)


_STORAGERESPONSE_FILEINFO = _descriptor.Descriptor(
  name='FileInfo',
  full_name='StorageResponse.FileInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='StorageResponse.FileInfo.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='byte_count', full_name='StorageResponse.FileInfo.byte_count', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_directory', full_name='StorageResponse.FileInfo.is_directory', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12581,
  serialized_end=12647,
)

_STORAGERESPONSE = _descriptor.Descriptor(
  name='StorageResponse',
  full_name='StorageResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bytes_free', full_name='StorageResponse.bytes_free', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bytes_total', full_name='StorageResponse.bytes_total', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='used_percentage', full_name='StorageResponse.used_percentage', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='current_page_usage', full_name='StorageResponse.current_page_usage', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='page_0_valid', full_name='StorageResponse.page_0_valid', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='page_1_valid', full_name='StorageResponse.page_1_valid', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='minimum_virtual_address', full_name='StorageResponse.minimum_virtual_address', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maximum_virtual_address', full_name='StorageResponse.maximum_virtual_address', index=7,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='file_info', full_name='StorageResponse.file_info', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='StorageResponse.data', index=9,
      number=10, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_STORAGERESPONSE_FILEINFO, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12298,
  serialized_end=12647,
)


_ACKNOWLEDGE = _descriptor.Descriptor(
  name='Acknowledge',
  full_name='Acknowledge',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='Acknowledge.data', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12649,
  serialized_end=12676,
)


_VERSION = _descriptor.Descriptor(
  name='Version',
  full_name='Version',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='major', full_name='Version.major', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='minor', full_name='Version.minor', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='patch', full_name='Version.patch', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12678,
  serialized_end=12732,
)


_ENDPOINT = _descriptor.Descriptor(
  name='Endpoint',
  full_name='Endpoint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='method', full_name='Endpoint.method', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='url', full_name='Endpoint.url', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='docstring', full_name='Endpoint.docstring', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12734,
  serialized_end=12807,
)


_ENDPOINTS = _descriptor.Descriptor(
  name='Endpoints',
  full_name='Endpoints',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='endpoint', full_name='Endpoints.endpoint', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12809,
  serialized_end=12849,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status_code', full_name='Response.status_code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bytestream', full_name='Response.bytestream', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='modules', full_name='Response.modules', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='module_types', full_name='Response.module_types', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parameters', full_name='Response.parameters', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='options', full_name='Response.options', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='inputs', full_name='Response.inputs', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='outputs', full_name='Response.outputs', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='nets', full_name='Response.nets', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='storage_response', full_name='Response.storage_response', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='module_type', full_name='Response.module_type', index=10,
      number=11, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='circuit', full_name='Response.circuit', index=11,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='module_count', full_name='Response.module_count', index=12,
      number=13, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='net_count', full_name='Response.net_count', index=13,
      number=14, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='requested', full_name='Response.requested', index=14,
      number=15, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='realized', full_name='Response.realized', index=15,
      number=16, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='minimum', full_name='Response.minimum', index=16,
      number=17, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maximum', full_name='Response.maximum', index=17,
      number=18, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='option_value', full_name='Response.option_value', index=18,
      number=19, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='system_options', full_name='Response.system_options', index=19,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='system_state', full_name='Response.system_state', index=20,
      number=21, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='heap_info', full_name='Response.heap_info', index=21,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='analog_info', full_name='Response.analog_info', index=22,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='analog_signal_processor', full_name='Response.analog_signal_processor', index=23,
      number=24, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='module_fits', full_name='Response.module_fits', index=24,
      number=25, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='module_clock_configuration', full_name='Response.module_clock_configuration', index=25,
      number=26, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='processor_clock_configuration', full_name='Response.processor_clock_configuration', index=26,
      number=27, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='has_lookup_table', full_name='Response.has_lookup_table', index=27,
      number=28, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='midi_listeners', full_name='Response.midi_listeners', index=28,
      number=29, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='acknowledge', full_name='Response.acknowledge', index=29,
      number=30, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='version', full_name='Response.version', index=30,
      number=31, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='endpoints', full_name='Response.endpoints', index=31,
      number=32, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lookup_table', full_name='Response.lookup_table', index=32,
      number=33, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='Response.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=12852,
  serialized_end=14023,
)

_OPTION.fields_by_name['id'].enum_type = _OPTION_ID
_OPTION.fields_by_name['value'].enum_type = _OPTION_VALUE
_OPTION.fields_by_name['valid_values'].enum_type = _OPTION_VALUE
_OPTION_ID.containing_type = _OPTION
_OPTION_VALUE.containing_type = _OPTION
_PARAMETER.fields_by_name['id'].enum_type = _PARAMETER_ID
_PARAMETER.fields_by_name['type'].enum_type = _PARAMETER_TYPE
_PARAMETER_ID.containing_type = _PARAMETER
_PARAMETER_TYPE.containing_type = _PARAMETER
_MODULECLOCKCONFIGURATION.fields_by_name['clock_a'].enum_type = _CLOCKID
_MODULECLOCKCONFIGURATION.fields_by_name['clock_b'].enum_type = _CLOCKID
_PROCESSORCLOCKCONFIGURATION_SYSCLOCKCONFIGURATION.fields_by_name['id'].enum_type = _CLOCKID
_PROCESSORCLOCKCONFIGURATION_SYSCLOCKCONFIGURATION.fields_by_name['timebase'].enum_type = _PROCESSORCLOCKCONFIGURATION_SYSCLOCKTIMEBASE
_PROCESSORCLOCKCONFIGURATION_SYSCLOCKCONFIGURATION.containing_type = _PROCESSORCLOCKCONFIGURATION
_PROCESSORCLOCKCONFIGURATION.fields_by_name['sys_clock'].message_type = _PROCESSORCLOCKCONFIGURATION_SYSCLOCKCONFIGURATION
_PROCESSORCLOCKCONFIGURATION_SYSCLOCKTIMEBASE.containing_type = _PROCESSORCLOCKCONFIGURATION
_ANALOGMODULE_INPUT_ENABLEDIF.fields_by_name['option_id'].enum_type = _OPTION_ID
_ANALOGMODULE_INPUT_ENABLEDIF.fields_by_name['option_value'].enum_type = _OPTION_VALUE
_ANALOGMODULE_INPUT_ENABLEDIF.containing_type = _ANALOGMODULE_INPUT
_ANALOGMODULE_INPUT.fields_by_name['id'].enum_type = _INPUTID
_ANALOGMODULE_INPUT.fields_by_name['enabled_if'].message_type = _ANALOGMODULE_INPUT_ENABLEDIF
_ANALOGMODULE_INPUT.containing_type = _ANALOGMODULE
_ANALOGMODULE.fields_by_name['type'].enum_type = _ANALOGMODULE_TYPE
_ANALOGMODULE.fields_by_name['parameters'].message_type = _PARAMETER
_ANALOGMODULE.fields_by_name['options'].message_type = _OPTION
_ANALOGMODULE.fields_by_name['clock_configuration'].message_type = _MODULECLOCKCONFIGURATION
_ANALOGMODULE_TYPE.containing_type = _ANALOGMODULE
_OUTPUTADDRESS.fields_by_name['output_id'].enum_type = _OUTPUTID
_INPUTADDRESS.fields_by_name['input_id'].enum_type = _INPUTID
_NET.fields_by_name['output_address'].message_type = _OUTPUTADDRESS
_NET.fields_by_name['input_address'].message_type = _INPUTADDRESS
_MIDILISTENER_NOTE_NOTETOPARAMETER.containing_type = _MIDILISTENER_NOTE
_MIDILISTENER_NOTE_NOTETOOPTION.fields_by_name['values'].enum_type = _OPTION_VALUE
_MIDILISTENER_NOTE_NOTETOOPTION.containing_type = _MIDILISTENER_NOTE
_MIDILISTENER_NOTE.fields_by_name['parameter_map'].message_type = _MIDILISTENER_NOTE_NOTETOPARAMETER
_MIDILISTENER_NOTE.fields_by_name['option_map'].message_type = _MIDILISTENER_NOTE_NOTETOOPTION
_MIDILISTENER_NOTE.containing_type = _MIDILISTENER
_MIDILISTENER_NOTE.oneofs_by_name['on_note_received'].fields.append(
  _MIDILISTENER_NOTE.fields_by_name['parameter_map'])
_MIDILISTENER_NOTE.fields_by_name['parameter_map'].containing_oneof = _MIDILISTENER_NOTE.oneofs_by_name['on_note_received']
_MIDILISTENER_NOTE.oneofs_by_name['on_note_received'].fields.append(
  _MIDILISTENER_NOTE.fields_by_name['option_map'])
_MIDILISTENER_NOTE.fields_by_name['option_map'].containing_oneof = _MIDILISTENER_NOTE.oneofs_by_name['on_note_received']
_MIDILISTENER_TRIGGER.fields_by_name['option_value'].enum_type = _OPTION_VALUE
_MIDILISTENER_TRIGGER.containing_type = _MIDILISTENER
_MIDILISTENER_TRIGGER.oneofs_by_name['on_triggered'].fields.append(
  _MIDILISTENER_TRIGGER.fields_by_name['parameter_value'])
_MIDILISTENER_TRIGGER.fields_by_name['parameter_value'].containing_oneof = _MIDILISTENER_TRIGGER.oneofs_by_name['on_triggered']
_MIDILISTENER_TRIGGER.oneofs_by_name['on_triggered'].fields.append(
  _MIDILISTENER_TRIGGER.fields_by_name['option_value'])
_MIDILISTENER_TRIGGER.fields_by_name['option_value'].containing_oneof = _MIDILISTENER_TRIGGER.oneofs_by_name['on_triggered']
_MIDILISTENER_GATE.fields_by_name['option_value_open'].enum_type = _OPTION_VALUE
_MIDILISTENER_GATE.fields_by_name['option_value_closed'].enum_type = _OPTION_VALUE
_MIDILISTENER_GATE.containing_type = _MIDILISTENER
_MIDILISTENER_GATE.oneofs_by_name['on_gate_opened'].fields.append(
  _MIDILISTENER_GATE.fields_by_name['parameter_value_open'])
_MIDILISTENER_GATE.fields_by_name['parameter_value_open'].containing_oneof = _MIDILISTENER_GATE.oneofs_by_name['on_gate_opened']
_MIDILISTENER_GATE.oneofs_by_name['on_gate_opened'].fields.append(
  _MIDILISTENER_GATE.fields_by_name['option_value_open'])
_MIDILISTENER_GATE.fields_by_name['option_value_open'].containing_oneof = _MIDILISTENER_GATE.oneofs_by_name['on_gate_opened']
_MIDILISTENER_GATE.oneofs_by_name['on_gate_closed'].fields.append(
  _MIDILISTENER_GATE.fields_by_name['parameter_value_closed'])
_MIDILISTENER_GATE.fields_by_name['parameter_value_closed'].containing_oneof = _MIDILISTENER_GATE.oneofs_by_name['on_gate_closed']
_MIDILISTENER_GATE.oneofs_by_name['on_gate_closed'].fields.append(
  _MIDILISTENER_GATE.fields_by_name['option_value_closed'])
_MIDILISTENER_GATE.fields_by_name['option_value_closed'].containing_oneof = _MIDILISTENER_GATE.oneofs_by_name['on_gate_closed']
_MIDILISTENER_CC_PARAMETERVALUERANGE.containing_type = _MIDILISTENER_CC
_MIDILISTENER_CC_OPTIONVALUERANGE_ITEM.fields_by_name['value'].enum_type = _OPTION_VALUE
_MIDILISTENER_CC_OPTIONVALUERANGE_ITEM.containing_type = _MIDILISTENER_CC_OPTIONVALUERANGE
_MIDILISTENER_CC_OPTIONVALUERANGE.fields_by_name['items'].message_type = _MIDILISTENER_CC_OPTIONVALUERANGE_ITEM
_MIDILISTENER_CC_OPTIONVALUERANGE.containing_type = _MIDILISTENER_CC
_MIDILISTENER_CC.fields_by_name['parameter_value_range'].message_type = _MIDILISTENER_CC_PARAMETERVALUERANGE
_MIDILISTENER_CC.fields_by_name['option_value_range'].message_type = _MIDILISTENER_CC_OPTIONVALUERANGE
_MIDILISTENER_CC.containing_type = _MIDILISTENER
_MIDILISTENER_CC.oneofs_by_name['on_cc_changed'].fields.append(
  _MIDILISTENER_CC.fields_by_name['parameter_value_range'])
_MIDILISTENER_CC.fields_by_name['parameter_value_range'].containing_oneof = _MIDILISTENER_CC.oneofs_by_name['on_cc_changed']
_MIDILISTENER_CC.oneofs_by_name['on_cc_changed'].fields.append(
  _MIDILISTENER_CC.fields_by_name['option_value_range'])
_MIDILISTENER_CC.fields_by_name['option_value_range'].containing_oneof = _MIDILISTENER_CC.oneofs_by_name['on_cc_changed']
_MIDILISTENER.fields_by_name['parameter_id'].enum_type = _PARAMETER_ID
_MIDILISTENER.fields_by_name['option_id'].enum_type = _OPTION_ID
_MIDILISTENER.fields_by_name['note'].message_type = _MIDILISTENER_NOTE
_MIDILISTENER.fields_by_name['trigger'].message_type = _MIDILISTENER_TRIGGER
_MIDILISTENER.fields_by_name['gate'].message_type = _MIDILISTENER_GATE
_MIDILISTENER.fields_by_name['cc'].message_type = _MIDILISTENER_CC
_MIDILISTENER.oneofs_by_name['target'].fields.append(
  _MIDILISTENER.fields_by_name['parameter_id'])
_MIDILISTENER.fields_by_name['parameter_id'].containing_oneof = _MIDILISTENER.oneofs_by_name['target']
_MIDILISTENER.oneofs_by_name['target'].fields.append(
  _MIDILISTENER.fields_by_name['option_id'])
_MIDILISTENER.fields_by_name['option_id'].containing_oneof = _MIDILISTENER.oneofs_by_name['target']
_MIDILISTENER.oneofs_by_name['type'].fields.append(
  _MIDILISTENER.fields_by_name['note'])
_MIDILISTENER.fields_by_name['note'].containing_oneof = _MIDILISTENER.oneofs_by_name['type']
_MIDILISTENER.oneofs_by_name['type'].fields.append(
  _MIDILISTENER.fields_by_name['trigger'])
_MIDILISTENER.fields_by_name['trigger'].containing_oneof = _MIDILISTENER.oneofs_by_name['type']
_MIDILISTENER.oneofs_by_name['type'].fields.append(
  _MIDILISTENER.fields_by_name['gate'])
_MIDILISTENER.fields_by_name['gate'].containing_oneof = _MIDILISTENER.oneofs_by_name['type']
_MIDILISTENER.oneofs_by_name['type'].fields.append(
  _MIDILISTENER.fields_by_name['cc'])
_MIDILISTENER.fields_by_name['cc'].containing_oneof = _MIDILISTENER.oneofs_by_name['type']
_CIRCUIT.fields_by_name['modules'].message_type = _ANALOGMODULE
_CIRCUIT.fields_by_name['nets'].message_type = _NET
_CIRCUIT.fields_by_name['midi_listeners'].message_type = _MIDILISTENER
_CIRCUIT.fields_by_name['lookup_table'].message_type = _LOOKUPTABLE
_CIRCUIT.fields_by_name['processor_clock_configuration'].message_type = _PROCESSORCLOCKCONFIGURATION
_SYSTEMOPTION.fields_by_name['id'].enum_type = _SYSTEMOPTION_ID
_SYSTEMOPTION_ID.containing_type = _SYSTEMOPTION
_PATHCOMPONENT.fields_by_name['resource_id'].enum_type = _PATHCOMPONENT_RESOURCEID
_PATHCOMPONENT.fields_by_name['module_type'].enum_type = _ANALOGMODULE_TYPE
_PATHCOMPONENT.fields_by_name['parameter_id'].enum_type = _PARAMETER_ID
_PATHCOMPONENT.fields_by_name['option_id'].enum_type = _OPTION_ID
_PATHCOMPONENT.fields_by_name['system_option_id'].enum_type = _SYSTEMOPTION_ID
_PATHCOMPONENT.fields_by_name['input_id'].enum_type = _INPUTID
_PATHCOMPONENT.fields_by_name['output_id'].enum_type = _OUTPUTID
_PATHCOMPONENT_RESOURCEID.containing_type = _PATHCOMPONENT
_PATHCOMPONENT.oneofs_by_name['type'].fields.append(
  _PATHCOMPONENT.fields_by_name['resource_id'])
_PATHCOMPONENT.fields_by_name['resource_id'].containing_oneof = _PATHCOMPONENT.oneofs_by_name['type']
_PATHCOMPONENT.oneofs_by_name['type'].fields.append(
  _PATHCOMPONENT.fields_by_name['module_type'])
_PATHCOMPONENT.fields_by_name['module_type'].containing_oneof = _PATHCOMPONENT.oneofs_by_name['type']
_PATHCOMPONENT.oneofs_by_name['type'].fields.append(
  _PATHCOMPONENT.fields_by_name['parameter_id'])
_PATHCOMPONENT.fields_by_name['parameter_id'].containing_oneof = _PATHCOMPONENT.oneofs_by_name['type']
_PATHCOMPONENT.oneofs_by_name['type'].fields.append(
  _PATHCOMPONENT.fields_by_name['option_id'])
_PATHCOMPONENT.fields_by_name['option_id'].containing_oneof = _PATHCOMPONENT.oneofs_by_name['type']
_PATHCOMPONENT.oneofs_by_name['type'].fields.append(
  _PATHCOMPONENT.fields_by_name['system_option_id'])
_PATHCOMPONENT.fields_by_name['system_option_id'].containing_oneof = _PATHCOMPONENT.oneofs_by_name['type']
_PATHCOMPONENT.oneofs_by_name['type'].fields.append(
  _PATHCOMPONENT.fields_by_name['input_id'])
_PATHCOMPONENT.fields_by_name['input_id'].containing_oneof = _PATHCOMPONENT.oneofs_by_name['type']
_PATHCOMPONENT.oneofs_by_name['type'].fields.append(
  _PATHCOMPONENT.fields_by_name['output_id'])
_PATHCOMPONENT.fields_by_name['output_id'].containing_oneof = _PATHCOMPONENT.oneofs_by_name['type']
_PATHCOMPONENT.oneofs_by_name['type'].fields.append(
  _PATHCOMPONENT.fields_by_name['integer_argument'])
_PATHCOMPONENT.fields_by_name['integer_argument'].containing_oneof = _PATHCOMPONENT.oneofs_by_name['type']
_PATHCOMPONENT.oneofs_by_name['type'].fields.append(
  _PATHCOMPONENT.fields_by_name['string_argument'])
_PATHCOMPONENT.fields_by_name['string_argument'].containing_oneof = _PATHCOMPONENT.oneofs_by_name['type']
_URL.fields_by_name['path_components'].message_type = _PATHCOMPONENT
_STORAGEDEBUGREQUEST.fields_by_name['command'].enum_type = _STORAGEDEBUGREQUEST_COMMAND
_STORAGEDEBUGREQUEST_COMMAND.containing_type = _STORAGEDEBUGREQUEST
_REQUEST.fields_by_name['method'].enum_type = _METHOD
_REQUEST.fields_by_name['url'].message_type = _URL
_REQUEST.fields_by_name['circuit'].message_type = _CIRCUIT
_REQUEST.fields_by_name['module'].message_type = _ANALOGMODULE
_REQUEST.fields_by_name['net'].message_type = _NET
_REQUEST.fields_by_name['midi_listener'].message_type = _MIDILISTENER
_REQUEST.fields_by_name['system_state'].enum_type = _SYSTEMSTATE
_REQUEST.fields_by_name['storage_debug_request'].message_type = _STORAGEDEBUGREQUEST
_REQUEST.fields_by_name['option_value'].enum_type = _OPTION_VALUE
_REQUEST.fields_by_name['bytestream'].message_type = _CONFIGURATIONBYTESTREAM
_REQUEST.fields_by_name['module_clock_configuration'].message_type = _MODULECLOCKCONFIGURATION
_REQUEST.fields_by_name['processor_clock_configuration'].message_type = _PROCESSORCLOCKCONFIGURATION
_REQUEST.fields_by_name['parameter_sweep'].message_type = _PARAMETERSWEEP
_REQUEST.fields_by_name['lookup_table'].message_type = _LOOKUPTABLE
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['circuit'])
_REQUEST.fields_by_name['circuit'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['module'])
_REQUEST.fields_by_name['module'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['net'])
_REQUEST.fields_by_name['net'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['midi_listener'])
_REQUEST.fields_by_name['midi_listener'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['system_state'])
_REQUEST.fields_by_name['system_state'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['storage_debug_request'])
_REQUEST.fields_by_name['storage_debug_request'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['requested'])
_REQUEST.fields_by_name['requested'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['option_value'])
_REQUEST.fields_by_name['option_value'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['system_option_enabled'])
_REQUEST.fields_by_name['system_option_enabled'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['bytestream'])
_REQUEST.fields_by_name['bytestream'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['module_clock_configuration'])
_REQUEST.fields_by_name['module_clock_configuration'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['processor_clock_configuration'])
_REQUEST.fields_by_name['processor_clock_configuration'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['parameter_sweep'])
_REQUEST.fields_by_name['parameter_sweep'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_INPUTS.fields_by_name['input'].message_type = _ANALOGMODULE_INPUT
_OUTPUTS.fields_by_name['output'].enum_type = _OUTPUTID
_ANALOGMODULES.fields_by_name['module'].message_type = _ANALOGMODULE
_NETS.fields_by_name['net'].message_type = _NET
_PARAMETERS.fields_by_name['parameter'].message_type = _PARAMETER
_SYSTEMOPTIONS.fields_by_name['system_option'].message_type = _SYSTEMOPTION
_OPTIONS.fields_by_name['option'].message_type = _OPTION
_MODULETYPES.fields_by_name['module_type'].enum_type = _ANALOGMODULE_TYPE
_MIDILISTENERS.fields_by_name['midi_listener'].message_type = _MIDILISTENER
_ANALOGSIGNALPROCESSOR_RESOURCEOWNERSHIP.containing_type = _ANALOGSIGNALPROCESSOR
_ANALOGSIGNALPROCESSOR_RESOURCEBLOCK.fields_by_name['capacitor'].message_type = _ANALOGSIGNALPROCESSOR_RESOURCEOWNERSHIP
_ANALOGSIGNALPROCESSOR_RESOURCEBLOCK.fields_by_name['opamp'].message_type = _ANALOGSIGNALPROCESSOR_RESOURCEOWNERSHIP
_ANALOGSIGNALPROCESSOR_RESOURCEBLOCK.fields_by_name['comparator'].message_type = _ANALOGSIGNALPROCESSOR_RESOURCEOWNERSHIP
_ANALOGSIGNALPROCESSOR_RESOURCEBLOCK.fields_by_name['sar'].message_type = _ANALOGSIGNALPROCESSOR_RESOURCEOWNERSHIP
_ANALOGSIGNALPROCESSOR_RESOURCEBLOCK.containing_type = _ANALOGSIGNALPROCESSOR
_ANALOGSIGNALPROCESSOR_IOCELLALLOCATION.fields_by_name['owner'].message_type = _ANALOGSIGNALPROCESSOR_RESOURCEOWNERSHIP
_ANALOGSIGNALPROCESSOR_IOCELLALLOCATION.fields_by_name['io_cell_type'].enum_type = _OPTION_VALUE
_ANALOGSIGNALPROCESSOR_IOCELLALLOCATION.fields_by_name['io_cell_id'].enum_type = _OPTION_VALUE
_ANALOGSIGNALPROCESSOR_IOCELLALLOCATION.containing_type = _ANALOGSIGNALPROCESSOR
_ANALOGSIGNALPROCESSOR.fields_by_name['resource_block'].message_type = _ANALOGSIGNALPROCESSOR_RESOURCEBLOCK
_ANALOGSIGNALPROCESSOR.fields_by_name['io_cell'].message_type = _ANALOGSIGNALPROCESSOR_IOCELLALLOCATION
_ANALOGSIGNALPROCESSOR.fields_by_name['lookup_table'].message_type = _ANALOGSIGNALPROCESSOR_RESOURCEOWNERSHIP
_ANALOGSIGNALPROCESSOR.fields_by_name['counter'].message_type = _ANALOGSIGNALPROCESSOR_RESOURCEOWNERSHIP
_STORAGERESPONSE_FILEINFO.containing_type = _STORAGERESPONSE
_STORAGERESPONSE.fields_by_name['file_info'].message_type = _STORAGERESPONSE_FILEINFO
_ENDPOINT.fields_by_name['method'].enum_type = _METHOD
_ENDPOINT.fields_by_name['url'].message_type = _URL
_ENDPOINTS.fields_by_name['endpoint'].message_type = _ENDPOINT
_RESPONSE.fields_by_name['status_code'].enum_type = _STATUSCODE
_RESPONSE.fields_by_name['bytestream'].message_type = _CONFIGURATIONBYTESTREAM
_RESPONSE.fields_by_name['modules'].message_type = _ANALOGMODULES
_RESPONSE.fields_by_name['module_types'].message_type = _MODULETYPES
_RESPONSE.fields_by_name['parameters'].message_type = _PARAMETERS
_RESPONSE.fields_by_name['options'].message_type = _OPTIONS
_RESPONSE.fields_by_name['inputs'].message_type = _INPUTS
_RESPONSE.fields_by_name['outputs'].message_type = _OUTPUTS
_RESPONSE.fields_by_name['nets'].message_type = _NETS
_RESPONSE.fields_by_name['storage_response'].message_type = _STORAGERESPONSE
_RESPONSE.fields_by_name['module_type'].enum_type = _ANALOGMODULE_TYPE
_RESPONSE.fields_by_name['circuit'].message_type = _CIRCUIT
_RESPONSE.fields_by_name['option_value'].enum_type = _OPTION_VALUE
_RESPONSE.fields_by_name['system_options'].message_type = _SYSTEMOPTIONS
_RESPONSE.fields_by_name['system_state'].enum_type = _SYSTEMSTATE
_RESPONSE.fields_by_name['heap_info'].message_type = _HEAPINFO
_RESPONSE.fields_by_name['analog_info'].message_type = _ANALOGINFO
_RESPONSE.fields_by_name['analog_signal_processor'].message_type = _ANALOGSIGNALPROCESSOR
_RESPONSE.fields_by_name['module_clock_configuration'].message_type = _MODULECLOCKCONFIGURATION
_RESPONSE.fields_by_name['processor_clock_configuration'].message_type = _PROCESSORCLOCKCONFIGURATION
_RESPONSE.fields_by_name['midi_listeners'].message_type = _MIDILISTENERS
_RESPONSE.fields_by_name['acknowledge'].message_type = _ACKNOWLEDGE
_RESPONSE.fields_by_name['version'].message_type = _VERSION
_RESPONSE.fields_by_name['endpoints'].message_type = _ENDPOINTS
_RESPONSE.fields_by_name['lookup_table'].message_type = _LOOKUPTABLE
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['bytestream'])
_RESPONSE.fields_by_name['bytestream'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['modules'])
_RESPONSE.fields_by_name['modules'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['module_types'])
_RESPONSE.fields_by_name['module_types'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['parameters'])
_RESPONSE.fields_by_name['parameters'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['options'])
_RESPONSE.fields_by_name['options'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['inputs'])
_RESPONSE.fields_by_name['inputs'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['outputs'])
_RESPONSE.fields_by_name['outputs'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['nets'])
_RESPONSE.fields_by_name['nets'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['storage_response'])
_RESPONSE.fields_by_name['storage_response'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['module_type'])
_RESPONSE.fields_by_name['module_type'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['circuit'])
_RESPONSE.fields_by_name['circuit'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['module_count'])
_RESPONSE.fields_by_name['module_count'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['net_count'])
_RESPONSE.fields_by_name['net_count'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['requested'])
_RESPONSE.fields_by_name['requested'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['realized'])
_RESPONSE.fields_by_name['realized'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['minimum'])
_RESPONSE.fields_by_name['minimum'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['maximum'])
_RESPONSE.fields_by_name['maximum'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['option_value'])
_RESPONSE.fields_by_name['option_value'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['system_options'])
_RESPONSE.fields_by_name['system_options'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['system_state'])
_RESPONSE.fields_by_name['system_state'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['heap_info'])
_RESPONSE.fields_by_name['heap_info'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['analog_info'])
_RESPONSE.fields_by_name['analog_info'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['analog_signal_processor'])
_RESPONSE.fields_by_name['analog_signal_processor'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['module_fits'])
_RESPONSE.fields_by_name['module_fits'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['module_clock_configuration'])
_RESPONSE.fields_by_name['module_clock_configuration'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['processor_clock_configuration'])
_RESPONSE.fields_by_name['processor_clock_configuration'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['has_lookup_table'])
_RESPONSE.fields_by_name['has_lookup_table'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['midi_listeners'])
_RESPONSE.fields_by_name['midi_listeners'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['acknowledge'])
_RESPONSE.fields_by_name['acknowledge'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['version'])
_RESPONSE.fields_by_name['version'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['endpoints'])
_RESPONSE.fields_by_name['endpoints'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
DESCRIPTOR.message_types_by_name['Option'] = _OPTION
DESCRIPTOR.message_types_by_name['Parameter'] = _PARAMETER
DESCRIPTOR.message_types_by_name['ParameterSweep'] = _PARAMETERSWEEP
DESCRIPTOR.message_types_by_name['ModuleClockConfiguration'] = _MODULECLOCKCONFIGURATION
DESCRIPTOR.message_types_by_name['ProcessorClockConfiguration'] = _PROCESSORCLOCKCONFIGURATION
DESCRIPTOR.message_types_by_name['LookupTable'] = _LOOKUPTABLE
DESCRIPTOR.message_types_by_name['AnalogModule'] = _ANALOGMODULE
DESCRIPTOR.message_types_by_name['OutputAddress'] = _OUTPUTADDRESS
DESCRIPTOR.message_types_by_name['InputAddress'] = _INPUTADDRESS
DESCRIPTOR.message_types_by_name['Net'] = _NET
DESCRIPTOR.message_types_by_name['ConfigurationByteStream'] = _CONFIGURATIONBYTESTREAM
DESCRIPTOR.message_types_by_name['MidiListener'] = _MIDILISTENER
DESCRIPTOR.message_types_by_name['Circuit'] = _CIRCUIT
DESCRIPTOR.message_types_by_name['SystemOption'] = _SYSTEMOPTION
DESCRIPTOR.message_types_by_name['PathComponent'] = _PATHCOMPONENT
DESCRIPTOR.message_types_by_name['URL'] = _URL
DESCRIPTOR.message_types_by_name['StorageDebugRequest'] = _STORAGEDEBUGREQUEST
DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['Inputs'] = _INPUTS
DESCRIPTOR.message_types_by_name['Outputs'] = _OUTPUTS
DESCRIPTOR.message_types_by_name['AnalogModules'] = _ANALOGMODULES
DESCRIPTOR.message_types_by_name['Nets'] = _NETS
DESCRIPTOR.message_types_by_name['Parameters'] = _PARAMETERS
DESCRIPTOR.message_types_by_name['SystemOptions'] = _SYSTEMOPTIONS
DESCRIPTOR.message_types_by_name['Options'] = _OPTIONS
DESCRIPTOR.message_types_by_name['ModuleTypes'] = _MODULETYPES
DESCRIPTOR.message_types_by_name['MidiListeners'] = _MIDILISTENERS
DESCRIPTOR.message_types_by_name['HeapInfo'] = _HEAPINFO
DESCRIPTOR.message_types_by_name['AnalogInfo'] = _ANALOGINFO
DESCRIPTOR.message_types_by_name['AnalogSignalProcessor'] = _ANALOGSIGNALPROCESSOR
DESCRIPTOR.message_types_by_name['StorageResponse'] = _STORAGERESPONSE
DESCRIPTOR.message_types_by_name['Acknowledge'] = _ACKNOWLEDGE
DESCRIPTOR.message_types_by_name['Version'] = _VERSION
DESCRIPTOR.message_types_by_name['Endpoint'] = _ENDPOINT
DESCRIPTOR.message_types_by_name['Endpoints'] = _ENDPOINTS
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
DESCRIPTOR.enum_types_by_name['IOCellId'] = _IOCELLID
DESCRIPTOR.enum_types_by_name['OutputId'] = _OUTPUTID
DESCRIPTOR.enum_types_by_name['InputId'] = _INPUTID
DESCRIPTOR.enum_types_by_name['ClockId'] = _CLOCKID
DESCRIPTOR.enum_types_by_name['SystemState'] = _SYSTEMSTATE
DESCRIPTOR.enum_types_by_name['Method'] = _METHOD
DESCRIPTOR.enum_types_by_name['StatusCode'] = _STATUSCODE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Option = _reflection.GeneratedProtocolMessageType('Option', (_message.Message,), {
  'DESCRIPTOR' : _OPTION,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Option)
  })
_sym_db.RegisterMessage(Option)

Parameter = _reflection.GeneratedProtocolMessageType('Parameter', (_message.Message,), {
  'DESCRIPTOR' : _PARAMETER,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Parameter)
  })
_sym_db.RegisterMessage(Parameter)

ParameterSweep = _reflection.GeneratedProtocolMessageType('ParameterSweep', (_message.Message,), {
  'DESCRIPTOR' : _PARAMETERSWEEP,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:ParameterSweep)
  })
_sym_db.RegisterMessage(ParameterSweep)

ModuleClockConfiguration = _reflection.GeneratedProtocolMessageType('ModuleClockConfiguration', (_message.Message,), {
  'DESCRIPTOR' : _MODULECLOCKCONFIGURATION,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:ModuleClockConfiguration)
  })
_sym_db.RegisterMessage(ModuleClockConfiguration)

ProcessorClockConfiguration = _reflection.GeneratedProtocolMessageType('ProcessorClockConfiguration', (_message.Message,), {

  'SysClockConfiguration' : _reflection.GeneratedProtocolMessageType('SysClockConfiguration', (_message.Message,), {
    'DESCRIPTOR' : _PROCESSORCLOCKCONFIGURATION_SYSCLOCKCONFIGURATION,
    '__module__' : 'zr_pb2'
    # @@protoc_insertion_point(class_scope:ProcessorClockConfiguration.SysClockConfiguration)
    })
  ,
  'DESCRIPTOR' : _PROCESSORCLOCKCONFIGURATION,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:ProcessorClockConfiguration)
  })
_sym_db.RegisterMessage(ProcessorClockConfiguration)
_sym_db.RegisterMessage(ProcessorClockConfiguration.SysClockConfiguration)

LookupTable = _reflection.GeneratedProtocolMessageType('LookupTable', (_message.Message,), {
  'DESCRIPTOR' : _LOOKUPTABLE,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:LookupTable)
  })
_sym_db.RegisterMessage(LookupTable)

AnalogModule = _reflection.GeneratedProtocolMessageType('AnalogModule', (_message.Message,), {

  'Input' : _reflection.GeneratedProtocolMessageType('Input', (_message.Message,), {

    'EnabledIf' : _reflection.GeneratedProtocolMessageType('EnabledIf', (_message.Message,), {
      'DESCRIPTOR' : _ANALOGMODULE_INPUT_ENABLEDIF,
      '__module__' : 'zr_pb2'
      # @@protoc_insertion_point(class_scope:AnalogModule.Input.EnabledIf)
      })
    ,
    'DESCRIPTOR' : _ANALOGMODULE_INPUT,
    '__module__' : 'zr_pb2'
    # @@protoc_insertion_point(class_scope:AnalogModule.Input)
    })
  ,
  'DESCRIPTOR' : _ANALOGMODULE,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:AnalogModule)
  })
_sym_db.RegisterMessage(AnalogModule)
_sym_db.RegisterMessage(AnalogModule.Input)
_sym_db.RegisterMessage(AnalogModule.Input.EnabledIf)

OutputAddress = _reflection.GeneratedProtocolMessageType('OutputAddress', (_message.Message,), {
  'DESCRIPTOR' : _OUTPUTADDRESS,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:OutputAddress)
  })
_sym_db.RegisterMessage(OutputAddress)

InputAddress = _reflection.GeneratedProtocolMessageType('InputAddress', (_message.Message,), {
  'DESCRIPTOR' : _INPUTADDRESS,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:InputAddress)
  })
_sym_db.RegisterMessage(InputAddress)

Net = _reflection.GeneratedProtocolMessageType('Net', (_message.Message,), {
  'DESCRIPTOR' : _NET,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Net)
  })
_sym_db.RegisterMessage(Net)

ConfigurationByteStream = _reflection.GeneratedProtocolMessageType('ConfigurationByteStream', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGURATIONBYTESTREAM,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:ConfigurationByteStream)
  })
_sym_db.RegisterMessage(ConfigurationByteStream)

MidiListener = _reflection.GeneratedProtocolMessageType('MidiListener', (_message.Message,), {

  'Note' : _reflection.GeneratedProtocolMessageType('Note', (_message.Message,), {

    'NoteToParameter' : _reflection.GeneratedProtocolMessageType('NoteToParameter', (_message.Message,), {
      'DESCRIPTOR' : _MIDILISTENER_NOTE_NOTETOPARAMETER,
      '__module__' : 'zr_pb2'
      # @@protoc_insertion_point(class_scope:MidiListener.Note.NoteToParameter)
      })
    ,

    'NoteToOption' : _reflection.GeneratedProtocolMessageType('NoteToOption', (_message.Message,), {
      'DESCRIPTOR' : _MIDILISTENER_NOTE_NOTETOOPTION,
      '__module__' : 'zr_pb2'
      # @@protoc_insertion_point(class_scope:MidiListener.Note.NoteToOption)
      })
    ,
    'DESCRIPTOR' : _MIDILISTENER_NOTE,
    '__module__' : 'zr_pb2'
    # @@protoc_insertion_point(class_scope:MidiListener.Note)
    })
  ,

  'Trigger' : _reflection.GeneratedProtocolMessageType('Trigger', (_message.Message,), {
    'DESCRIPTOR' : _MIDILISTENER_TRIGGER,
    '__module__' : 'zr_pb2'
    # @@protoc_insertion_point(class_scope:MidiListener.Trigger)
    })
  ,

  'Gate' : _reflection.GeneratedProtocolMessageType('Gate', (_message.Message,), {
    'DESCRIPTOR' : _MIDILISTENER_GATE,
    '__module__' : 'zr_pb2'
    # @@protoc_insertion_point(class_scope:MidiListener.Gate)
    })
  ,

  'CC' : _reflection.GeneratedProtocolMessageType('CC', (_message.Message,), {

    'ParameterValueRange' : _reflection.GeneratedProtocolMessageType('ParameterValueRange', (_message.Message,), {
      'DESCRIPTOR' : _MIDILISTENER_CC_PARAMETERVALUERANGE,
      '__module__' : 'zr_pb2'
      # @@protoc_insertion_point(class_scope:MidiListener.CC.ParameterValueRange)
      })
    ,

    'OptionValueRange' : _reflection.GeneratedProtocolMessageType('OptionValueRange', (_message.Message,), {

      'Item' : _reflection.GeneratedProtocolMessageType('Item', (_message.Message,), {
        'DESCRIPTOR' : _MIDILISTENER_CC_OPTIONVALUERANGE_ITEM,
        '__module__' : 'zr_pb2'
        # @@protoc_insertion_point(class_scope:MidiListener.CC.OptionValueRange.Item)
        })
      ,
      'DESCRIPTOR' : _MIDILISTENER_CC_OPTIONVALUERANGE,
      '__module__' : 'zr_pb2'
      # @@protoc_insertion_point(class_scope:MidiListener.CC.OptionValueRange)
      })
    ,
    'DESCRIPTOR' : _MIDILISTENER_CC,
    '__module__' : 'zr_pb2'
    # @@protoc_insertion_point(class_scope:MidiListener.CC)
    })
  ,
  'DESCRIPTOR' : _MIDILISTENER,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:MidiListener)
  })
_sym_db.RegisterMessage(MidiListener)
_sym_db.RegisterMessage(MidiListener.Note)
_sym_db.RegisterMessage(MidiListener.Note.NoteToParameter)
_sym_db.RegisterMessage(MidiListener.Note.NoteToOption)
_sym_db.RegisterMessage(MidiListener.Trigger)
_sym_db.RegisterMessage(MidiListener.Gate)
_sym_db.RegisterMessage(MidiListener.CC)
_sym_db.RegisterMessage(MidiListener.CC.ParameterValueRange)
_sym_db.RegisterMessage(MidiListener.CC.OptionValueRange)
_sym_db.RegisterMessage(MidiListener.CC.OptionValueRange.Item)

Circuit = _reflection.GeneratedProtocolMessageType('Circuit', (_message.Message,), {
  'DESCRIPTOR' : _CIRCUIT,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Circuit)
  })
_sym_db.RegisterMessage(Circuit)

SystemOption = _reflection.GeneratedProtocolMessageType('SystemOption', (_message.Message,), {
  'DESCRIPTOR' : _SYSTEMOPTION,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:SystemOption)
  })
_sym_db.RegisterMessage(SystemOption)

PathComponent = _reflection.GeneratedProtocolMessageType('PathComponent', (_message.Message,), {
  'DESCRIPTOR' : _PATHCOMPONENT,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:PathComponent)
  })
_sym_db.RegisterMessage(PathComponent)

URL = _reflection.GeneratedProtocolMessageType('URL', (_message.Message,), {
  'DESCRIPTOR' : _URL,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:URL)
  })
_sym_db.RegisterMessage(URL)

StorageDebugRequest = _reflection.GeneratedProtocolMessageType('StorageDebugRequest', (_message.Message,), {
  'DESCRIPTOR' : _STORAGEDEBUGREQUEST,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:StorageDebugRequest)
  })
_sym_db.RegisterMessage(StorageDebugRequest)

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), {
  'DESCRIPTOR' : _REQUEST,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Request)
  })
_sym_db.RegisterMessage(Request)

Inputs = _reflection.GeneratedProtocolMessageType('Inputs', (_message.Message,), {
  'DESCRIPTOR' : _INPUTS,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Inputs)
  })
_sym_db.RegisterMessage(Inputs)

Outputs = _reflection.GeneratedProtocolMessageType('Outputs', (_message.Message,), {
  'DESCRIPTOR' : _OUTPUTS,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Outputs)
  })
_sym_db.RegisterMessage(Outputs)

AnalogModules = _reflection.GeneratedProtocolMessageType('AnalogModules', (_message.Message,), {
  'DESCRIPTOR' : _ANALOGMODULES,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:AnalogModules)
  })
_sym_db.RegisterMessage(AnalogModules)

Nets = _reflection.GeneratedProtocolMessageType('Nets', (_message.Message,), {
  'DESCRIPTOR' : _NETS,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Nets)
  })
_sym_db.RegisterMessage(Nets)

Parameters = _reflection.GeneratedProtocolMessageType('Parameters', (_message.Message,), {
  'DESCRIPTOR' : _PARAMETERS,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Parameters)
  })
_sym_db.RegisterMessage(Parameters)

SystemOptions = _reflection.GeneratedProtocolMessageType('SystemOptions', (_message.Message,), {
  'DESCRIPTOR' : _SYSTEMOPTIONS,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:SystemOptions)
  })
_sym_db.RegisterMessage(SystemOptions)

Options = _reflection.GeneratedProtocolMessageType('Options', (_message.Message,), {
  'DESCRIPTOR' : _OPTIONS,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Options)
  })
_sym_db.RegisterMessage(Options)

ModuleTypes = _reflection.GeneratedProtocolMessageType('ModuleTypes', (_message.Message,), {
  'DESCRIPTOR' : _MODULETYPES,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:ModuleTypes)
  })
_sym_db.RegisterMessage(ModuleTypes)

MidiListeners = _reflection.GeneratedProtocolMessageType('MidiListeners', (_message.Message,), {
  'DESCRIPTOR' : _MIDILISTENERS,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:MidiListeners)
  })
_sym_db.RegisterMessage(MidiListeners)

HeapInfo = _reflection.GeneratedProtocolMessageType('HeapInfo', (_message.Message,), {
  'DESCRIPTOR' : _HEAPINFO,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:HeapInfo)
  })
_sym_db.RegisterMessage(HeapInfo)

AnalogInfo = _reflection.GeneratedProtocolMessageType('AnalogInfo', (_message.Message,), {
  'DESCRIPTOR' : _ANALOGINFO,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:AnalogInfo)
  })
_sym_db.RegisterMessage(AnalogInfo)

AnalogSignalProcessor = _reflection.GeneratedProtocolMessageType('AnalogSignalProcessor', (_message.Message,), {

  'ResourceOwnership' : _reflection.GeneratedProtocolMessageType('ResourceOwnership', (_message.Message,), {
    'DESCRIPTOR' : _ANALOGSIGNALPROCESSOR_RESOURCEOWNERSHIP,
    '__module__' : 'zr_pb2'
    # @@protoc_insertion_point(class_scope:AnalogSignalProcessor.ResourceOwnership)
    })
  ,

  'ResourceBlock' : _reflection.GeneratedProtocolMessageType('ResourceBlock', (_message.Message,), {
    'DESCRIPTOR' : _ANALOGSIGNALPROCESSOR_RESOURCEBLOCK,
    '__module__' : 'zr_pb2'
    # @@protoc_insertion_point(class_scope:AnalogSignalProcessor.ResourceBlock)
    })
  ,

  'IOCellAllocation' : _reflection.GeneratedProtocolMessageType('IOCellAllocation', (_message.Message,), {
    'DESCRIPTOR' : _ANALOGSIGNALPROCESSOR_IOCELLALLOCATION,
    '__module__' : 'zr_pb2'
    # @@protoc_insertion_point(class_scope:AnalogSignalProcessor.IOCellAllocation)
    })
  ,
  'DESCRIPTOR' : _ANALOGSIGNALPROCESSOR,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:AnalogSignalProcessor)
  })
_sym_db.RegisterMessage(AnalogSignalProcessor)
_sym_db.RegisterMessage(AnalogSignalProcessor.ResourceOwnership)
_sym_db.RegisterMessage(AnalogSignalProcessor.ResourceBlock)
_sym_db.RegisterMessage(AnalogSignalProcessor.IOCellAllocation)

StorageResponse = _reflection.GeneratedProtocolMessageType('StorageResponse', (_message.Message,), {

  'FileInfo' : _reflection.GeneratedProtocolMessageType('FileInfo', (_message.Message,), {
    'DESCRIPTOR' : _STORAGERESPONSE_FILEINFO,
    '__module__' : 'zr_pb2'
    # @@protoc_insertion_point(class_scope:StorageResponse.FileInfo)
    })
  ,
  'DESCRIPTOR' : _STORAGERESPONSE,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:StorageResponse)
  })
_sym_db.RegisterMessage(StorageResponse)
_sym_db.RegisterMessage(StorageResponse.FileInfo)

Acknowledge = _reflection.GeneratedProtocolMessageType('Acknowledge', (_message.Message,), {
  'DESCRIPTOR' : _ACKNOWLEDGE,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Acknowledge)
  })
_sym_db.RegisterMessage(Acknowledge)

Version = _reflection.GeneratedProtocolMessageType('Version', (_message.Message,), {
  'DESCRIPTOR' : _VERSION,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Version)
  })
_sym_db.RegisterMessage(Version)

Endpoint = _reflection.GeneratedProtocolMessageType('Endpoint', (_message.Message,), {
  'DESCRIPTOR' : _ENDPOINT,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Endpoint)
  })
_sym_db.RegisterMessage(Endpoint)

Endpoints = _reflection.GeneratedProtocolMessageType('Endpoints', (_message.Message,), {
  'DESCRIPTOR' : _ENDPOINTS,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Endpoints)
  })
_sym_db.RegisterMessage(Endpoints)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSE,
  '__module__' : 'zr_pb2'
  # @@protoc_insertion_point(class_scope:Response)
  })
_sym_db.RegisterMessage(Response)


# @@protoc_insertion_point(module_scope)
